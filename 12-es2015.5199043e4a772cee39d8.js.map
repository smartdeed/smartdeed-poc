{"version":3,"sources":["webpack:///src/app/pages/ui-elements/tables/bootstrap-table/basic-bootstrap/basic-bootstrap-routing.module.ts","webpack:///src/app/pages/ui-elements/tables/bootstrap-table/basic-bootstrap/basic-bootstrap.component.ts","webpack:///src/app/pages/ui-elements/tables/bootstrap-table/basic-bootstrap/basic-bootstrap.component.html","webpack:///src/app/pages/ui-elements/tables/bootstrap-table/basic-bootstrap/basic-bootstrap.module.ts","webpack:///src/app/shared/card/card-animation.ts","webpack:///src/app/shared/card/card-toggle.directive.ts","webpack:///src/app/shared/card/card.component.html","webpack:///src/app/shared/card/card.component.ts"],"names":["routes","path","component","BasicBootstrapComponent","data","breadcrumb","icon","breadcrumb_caption","status","BasicBootstrapRoutingModule","forChild","BasicBootstrapModule","CommonModule","cardToggle","overflow","height","cardClose","opacity","display","CardToggleDirective","el","$event","preventDefault","this","nativeElement","classList","toggle","CardComponent","classHeader","loadCard","isCardToggled","event","fullCard","fullCardIcon","cardLoad","setTimeout"],"mappings":"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","file":"x","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {BasicBootstrapComponent} from './basic-bootstrap.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BasicBootstrapComponent,\n    data: {\n      breadcrumb: 'Basic Table',\n      icon: 'icofont-table bg-c-blue',\n      breadcrumb_caption: 'Lorem Ipsum Dolor Sit Amet, Consectetur Adipisicing Elit - Basic Table',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BasicBootstrapRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-basic-bootstrap',\n  templateUrl: './basic-bootstrap.component.html',\n  styleUrls: ['./basic-bootstrap.component.scss']\n})\nexport class BasicBootstrapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-12\">\n    <!-- Basic table card start -->\n    <app-card [title]=\"'Basic table'\" [classHeader]=\"true\" [blockClass]=\"'table-border-style'\">\n      <span class=\"code-header\">use class <code>table</code> inside table element</span>\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </app-card>\n    <!-- Basic table card end -->\n    <!-- Inverse table card start -->\n    <app-card [title]=\"'Inverse table'\" [classHeader]=\"true\" [blockClass]=\"'table-border-style'\">\n      <span class=\"code-header\">use class <code>table-inverse</code> inside table element</span>\n      <div class=\"table-responsive\">\n        <table class=\"table table-inverse\">\n          <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </app-card>\n    <!-- Inverse table card end -->\n    <!-- Hover table card start -->\n    <app-card [title]=\"'Hover table'\" [classHeader]=\"true\" [blockClass]=\"'table-border-style'\">\n      <span class=\"code-header\">use class <code>table-hover</code> inside table element</span>\n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\">\n          <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr>\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </app-card>\n    <!-- Hover table card end -->\n    <!-- Contextual classes table starts -->\n    <app-card [title]=\"'Contextual classes'\" [classHeader]=\"true\" [blockClass]=\"'table-border-style'\">\n      <span class=\"code-header\">For Make row Contextual add Contextual class like <code>.table-success</code> in <code> tr tag</code> and For cell add Contextual class in <code> td or th tag</code> . </span>\n      <div class=\"table-responsive\">\n        <table class=\"table\">\n          <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr class=\"table-active\">\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr class=\"table-success\">\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr class=\"table-warning\">\n            <th scope=\"row\">5</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">6</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr class=\"table-danger\">\n            <th scope=\"row\">7</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">8</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr class=\"table-info\">\n            <th scope=\"row\">9</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </app-card>\n    <!-- Contextual classes table ends -->\n    <!-- Background Utilities table start -->\n    <app-card [title]=\"'Background Utilities'\" [classHeader]=\"true\" [blockClass]=\"'table-border-style'\">\n      <span class=\"code-header\">Regular table background variants are not available with the inverse table, however, you may use <code>text or background utilities</code> to achieve similar styles.</span>\n      <div class=\"table-responsive\">\n        <table class=\"table table-inverse\">\n          <thead>\n          <tr>\n            <th>#</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Username</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr class=\"bg-primary\">\n            <th scope=\"row\">1</th>\n            <td>Mark</td>\n            <td>Otto</td>\n            <td>@mdo</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">2</th>\n            <td>Jacob</td>\n            <td>Thornton</td>\n            <td>@fat</td>\n          </tr>\n          <tr class=\"bg-success\">\n            <th scope=\"row\">3</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">4</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr class=\"bg-warning\">\n            <th scope=\"row\">5</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">6</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr class=\"bg-danger\">\n            <th scope=\"row\">7</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">8</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          <tr class=\"bg-info\">\n            <th scope=\"row\">9</th>\n            <td>Larry</td>\n            <td>the Bird</td>\n            <td>@twitter</td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </app-card>\n    <!-- Background Utilities table end -->\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BasicBootstrapRoutingModule } from './basic-bootstrap-routing.module';\nimport { BasicBootstrapComponent } from './basic-bootstrap.component';\nimport {SharedModule} from '../../../../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BasicBootstrapRoutingModule,\n    SharedModule\n  ],\n  declarations: [BasicBootstrapComponent]\n})\nexport class BasicBootstrapModule { }\n","import {trigger, state, style, AUTO_STYLE, transition, animate} from '@angular/animations';\r\n\r\nexport const cardToggle = trigger('cardToggle', [\r\n    state('collapsed, void',\r\n        style({\r\n            overflow: 'hidden',\r\n            height: '0px',\r\n        })\r\n    ),\r\n    state('expanded',\r\n        style({\r\n            height: AUTO_STYLE,\r\n        })\r\n    ),\r\n    transition('collapsed <=> expanded', [\r\n        animate('400ms ease-in-out')\r\n    ])\r\n]);\r\n\r\nexport const cardClose = trigger('cardClose', [\r\n    state('open', style({\r\n        opacity: 1\r\n    })),\r\n    state('closed', style({\r\n        opacity: 0,\r\n        display: 'none'\r\n    })),\r\n    transition('open <=> closed', animate( '400ms' )),\r\n]);\r\n","import {Directive, ElementRef, HostListener} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appCardToggleEvent]'\r\n})\r\nexport class CardToggleDirective {\r\n    constructor(private el: ElementRef) { }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onToggle($event: any) {\r\n        $event.preventDefault();\r\n        this.el.nativeElement.classList.toggle('icon-up');\r\n    }\r\n}\r\n","<div class=\"card {{ fullCard }} {{ cardLoad }}\" [@cardClose]=\"cardClose\" [ngClass]=\"cardClass\">\n  <div class=\"card-header\" *ngIf=\"title\">\n    <h5>{{ title }}</h5>\n    <span *ngIf=\"!classHeader\">{{ headerContent }}</span>\n    <span *ngIf=\"classHeader\">\n      <ng-content select=\".code-header\"></ng-content>\n    </span>\n    <div class=\"card-header-right\">\n      <ul class=\"list-unstyled card-option\">\n        <li *ngIf=\"!isCardToggled\" (click)=\"this.isCardToggled = !this.isCardToggled\"><i class=\"icofont icofont-simple-left\"></i></li>\n        <li *ngIf=\"isCardToggled\" (click)=\"this.isCardToggled = !this.isCardToggled\"><i class=\"icofont icofont-simple-right\"></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-maximize {{ fullCardIcon }} full-card\" (click)=\"fullScreen($event)\"></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-minus minimize-card\" appCardToggleEvent (click)=\"toggleCard($event)\"></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-refresh reload-card\" (click)=\"appCardRefresh($event)\" ></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-error close-card\" (click)=\"closeCard($event)\"></i></li>\n      </ul>\n    </div>\n  </div>\n\n  <div [@cardToggle]=\"cardToggle\">\n    <div class=\"card-body\" [ngClass]=\"blockClass\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div class=\"card-loader\" *ngIf=\"loadCard\"><i class=\"icofont icofont-refresh rotate-refresh\"></i></div>\n</div>\n","import {Component, OnInit, Input, ViewEncapsulation} from '@angular/core';\nimport {cardToggle, cardClose} from './card-animation';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  animations: [cardToggle, cardClose],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CardComponent implements OnInit {\n  @Input() headerContent: string;\n  @Input() title: string;\n  @Input() blockClass: string;\n  @Input() cardClass: string;\n  @Input() classHeader = false;\n  cardToggle = 'expanded';\n  cardClose = 'open';\n  fullCard: string;\n  fullCardIcon: string;\n  loadCard = false;\n  isCardToggled = false;\n  cardLoad: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleCard(event) {\n    this.cardToggle = this.cardToggle === 'collapsed' ? 'expanded' : 'collapsed';\n  }\n\n  closeCard(event) {\n    this.cardClose = this.cardClose === 'closed' ? 'open' : 'closed';\n  }\n\n  fullScreen(event) {\n    this.fullCard = this.fullCard === 'full-card' ? '' : 'full-card';\n    this.fullCardIcon = this.fullCardIcon === 'icofont-resize' ? '' : 'icofont-resize';\n  }\n\n  appCardRefresh() {\n    this.loadCard = true;\n    this.cardLoad = 'card-load';\n    setTimeout( () => {\n      this.cardLoad = '';\n      this.loadCard = false;\n    }, 3000);\n  }\n}\n"]}