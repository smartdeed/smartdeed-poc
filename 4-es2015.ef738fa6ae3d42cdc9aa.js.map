{"version":3,"sources":["./src/app/pages/user/profile/profile-routing.module.ts","./src/app/pages/user/profile/profile.component.ts","./src/app/pages/user/profile/profile.component.html","./node_modules/@angular/common/__ivy_ngcc__/fesm2015/http.js","./src/app/pages/user/profile/profile.module.ts"],"names":[],"mappings":"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","file":"4-es2015.ef738fa6ae3d42cdc9aa.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProfileComponent} from './profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent,\n    data: {\n      breadcrumb: 'About Us',\n      icon: 'icofont-justify-all bg-c-green',\n      breadcrumb_caption: 'Lorem Ipsum Dolor Sit Amet, Consectetur Adipisicing Elit - About Us',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProfileRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {animate, style, transition, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss'],\n  animations: [\n    trigger('fadeInOutTranslate', [\n      transition(':enter', [\n        style({opacity: 0}),\n        animate('400ms ease-in-out', style({opacity: 1}))\n      ]),\n      transition(':leave', [\n        style({transform: 'translate(0)'}),\n        animate('400ms ease-in-out', style({opacity: 0}))\n      ])\n    ])\n  ]\n})\nexport class ProfileComponent implements OnInit {\n  editProfile = true;\n  editProfileIcon = 'icofont-edit';\n\n  editAbout = true;\n  editAboutIcon = 'icofont-edit';\n\n  public basicContent: string;\n\n\n  public rowsOnPage = 10;\n  public filterQuery = '';\n  public sortBy = '';\n  public sortOrder = 'desc';\n  profitChartOption: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  toggleEditProfile() {\n    this.editProfileIcon = (this.editProfileIcon === 'icofont-close') ? 'icofont-edit' : 'icofont-close';\n    this.editProfile = !this.editProfile;\n  }\n\n  toggleEditAbout() {\n    this.editAboutIcon = (this.editAboutIcon === 'icofont-close') ? 'icofont-edit' : 'icofont-close';\n    this.editAbout = !this.editAbout;\n  }\n\n}\n","<!--profile cover start-->\n<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"cover-profile\">\n      <div class=\"profile-bg-img\">\n        <img class=\"profile-bg-img img-fluid\" src=\"assets/images/user-profile/bg-img1.jpg\" alt=\"bg-img\">\n        <div class=\"card-body user-info\">\n          <div class=\"col-md-12\">\n            <div class=\"media-left\">\n              <a href=\"javascript:;\" class=\"profile-image\">\n                <img class=\"user-img img-radius\" src=\"assets/images/user-profile/user-img.jpg\" alt=\"user-img\">\n              </a>\n            </div>\n            <div class=\"media-body row\">\n              <div class=\"col-lg-12\">\n                <div class=\"user-title\">\n                  <h2>Josephin Villa</h2>\n                  <span class=\"text-white\">Web designer</span>\n                </div>\n              </div>\n              <div>\n                <div class=\"pull-right cover-btn\">\n                  <button type=\"button\" class=\"btn btn-primary m-b-10 m-r-10\"><i class=\"icofont icofont-plus\"></i> Follow</button>\n                  <button type=\"button\" class=\"btn btn-primary m-b-10\"><i class=\"icofont icofont-ui-messaging\"></i> Message</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!--profile cover end-->\n<div class=\"row\">\n  <div class=\"col-lg-12\">\n    <div class=\"md-tabs\">\n      <ngb-tabset>\n        <ngb-tab title=\"Personal Info\">\n          <ng-template ngbTabContent>\n            <div [@fadeInOutTranslate] class=\"m-t-15\">\n              <!-- personal card start -->\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5 class=\"card-header-text\">About Me</h5>\n                  <button id=\"edit-btn\" type=\"button\" class=\"btn btn-sm btn-primary waves-effect waves-light f-right\" (click)=\"toggleEditProfile()\">\n                    <i class=\"icofont {{ editProfileIcon }}\"></i>\n                  </button>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"view-info\" *ngIf=\"editProfile\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-12\">\n                        <div class=\"general-info\">\n                          <div class=\"row\">\n                            <div class=\"col-lg-12 col-xl-6\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table m-0\">\n                                  <tbody>\n                                  <tr>\n                                    <th scope=\"row\">Full Name</th>\n                                    <td>Josephine Villa</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Gender</th>\n                                    <td>Female</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Birth Date</th>\n                                    <td>October 25th, 1990</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Marital Status</th>\n                                    <td>Single</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Location</th>\n                                    <td>New York, USA</td>\n                                  </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                            <!-- end of table col-lg-6 -->\n                            <div class=\"col-lg-12 col-xl-6\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                  <tbody>\n                                  <tr>\n                                    <th scope=\"row\">Email</th>\n                                    <td><a href=\"javascript:;\">Demo@phenix.com</a></td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Mobile Number</th>\n                                    <td>(0123) - 4567891</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Twitter</th>\n                                    <td>@codedthemes</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Skype</th>\n                                    <td>codedthemes.demo</td>\n                                  </tr>\n                                  <tr>\n                                    <th scope=\"row\">Website</th>\n                                    <td><a href=\"javascript:;\">www.demo.com</a></td>\n                                  </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                            <!-- end of table col-lg-6 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of general info -->\n                      </div>\n                      <!-- end of col-lg-12 -->\n                    </div>\n                    <!-- end of row -->\n                  </div>\n                  <!-- end of view-info -->\n                  <div class=\"edit-info\" *ngIf=\"!editProfile\">\n                    <div class=\"row\">\n                      <div class=\"col-lg-12\">\n                        <div class=\"general-info\">\n                          <div class=\"row\">\n                            <div class=\"col-lg-6\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                  <tbody>\n                                  <tr>\n                                    <td>\n                                      <div class=\"input-group\">\n                                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-user\"></i></label></span>\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Full Name\" value=\"Josephine Villa\">\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <div class=\"form-radio\">\n                                        <div class=\"group-add-on\">\n                                          <div class=\"radio radiofill radio-inline\">\n                                            <label>\n                                              <input type=\"radio\" name=\"radio\"><i class=\"helper\"></i> Male\n                                            </label>\n                                          </div>\n                                          <div class=\"radio radiofill radio-inline\">\n                                            <label>\n                                              <input type=\"radio\" name=\"radio\" checked><i class=\"helper\"></i> Female\n                                            </label>\n                                          </div>\n                                        </div>\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <input id=\"dropper-default\" class=\"form-control\" type=\"text\" value=\"October 25th, 1990\" placeholder=\"Select Your Birth Date\" />\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <select id=\"hello-single\" class=\"form-control\">\n                                        <option value=\"\">---- Marital Status ----</option>\n                                        <option value=\"married\">Married</option>\n                                        <option value=\"single\" selected>Single</option>\n                                        <option value=\"unmarried\">Unmarried</option>\n                                      </select>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <div class=\"input-group\">\n                                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-location-pin\"></i></label></span>\n                                        <input type=\"text\" class=\"form-control\" placeholder=\"Address\" value=\"New York, USA\">\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                            <!-- end of table col-lg-6 -->\n                            <div class=\"col-lg-6\">\n                              <div class=\"table-responsive\">\n                                <table class=\"table\">\n                                  <tbody>\n                                  <tr>\n                                    <td>\n                                      <div class=\"input-group\">\n                                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-mobile-phone\"></i></label></span>\n                                        <input type=\"text\" class=\"form-control\" value=\"(0123) - 4567891\" placeholder=\"Mobile Number\">\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <div class=\"input-group\">\n                                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-social-twitter\"></i></label></span>\n                                        <input type=\"text\" class=\"form-control\" value=\"@codedthemes\" placeholder=\"Twitter Id\">\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <div class=\"input-group\">\n                                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-social-skype\"></i></label></span>\n                                        <input type=\"email\" class=\"form-control\" value=\"codedthemes.demo\" placeholder=\"Skype Id\">\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  <tr>\n                                    <td>\n                                      <div class=\"input-group\">\n                                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-earth\"></i></label></span>\n                                        <input type=\"text\" class=\"form-control\" value=\"www.demo.com\" placeholder=\"website\">\n                                      </div>\n                                    </td>\n                                  </tr>\n                                  </tbody>\n                                </table>\n                              </div>\n                            </div>\n                            <!-- end of table col-lg-6 -->\n                          </div>\n                          <!-- end of row -->\n                          <div class=\"text-center\">\n                            <a href=\"javascript:;\" class=\"btn btn-primary waves-effect waves-light m-r-20\">Save</a>\n                            <a href=\"javascript:;\" id=\"edit-cancel\" class=\"btn btn-default waves-effect\" (click)=\"toggleEditProfile()\">Cancel</a>\n                          </div>\n                        </div>\n                        <!-- end of edit info -->\n                      </div>\n                      <!-- end of col-lg-12 -->\n                    </div>\n                    <!-- end of row -->\n                  </div>\n                  <!-- end of edit-info -->\n                </div>\n                <!-- end of card-body -->\n              </div>\n              <!-- personal card end-->\n            </div>\n          </ng-template>\n        </ngb-tab>\n        <ngb-tab title=\"User's Services\">\n          <ng-template ngbTabContent>\n            <div [@fadeInOutTranslate] class=\"m-t-15\">\n              <!-- info card start -->\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5 class=\"card-header-text\">User Services</h5>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <div class=\"card b-l-success business-info services m-b-20\">\n                        <div ngbDropdown class=\"card-header\">\n                          <div class=\"service-header\">\n                            <a href=\"javascript:;\"><h5 class=\"card-header-text\">Shivani Hero</h5></a>\n                          </div>\n                          <span ngbDropdownToggle class=\"dropdown-toggle addon-btn text-muted f-right service-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" role=\"tooltip\">\n                                         </span>\n                          <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right b-none services-list\">\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-edit\"></i> Edit</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-ui-delete\"></i> Delete</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-eye-alt\"></i> View</a>\n                          </div>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <p class=\"task-detail\">Lorem ipsum dolor sit amet, consectet ur adipisicing elit, sed do eiusmod temp or incidi dunt ut labore et.Lorem ipsum dolor sit amet, consecte.</p>\n                            </div>\n                            <!-- end of col-sm-8 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of card-body -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"card b-l-danger business-info services\">\n                        <div ngbDropdown class=\"card-header\">\n                          <div class=\"service-header\">\n                            <a href=\"javascript:;\"><h5 class=\"card-header-text\">Dress and Sarees</h5></a>\n                          </div>\n                          <span ngbDropdownToggle class=\"dropdown-toggle addon-btn text-muted f-right service-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" role=\"tooltip\">\n                                         </span>\n                          <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right b-none services-list\">\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-edit\"></i> Edit</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-ui-delete\"></i> Delete</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-eye-alt\"></i> View</a>\n                          </div>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <p class=\"task-detail\">Lorem ipsum dolor sit amet, consectet ur adipisicing elit, sed do eiusmod temp or incidi dunt ut labore et.Lorem ipsum dolor sit amet, consecte.</p>\n                            </div>\n                            <!-- end of col-sm-8 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of card-body -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"card b-l-info business-info services\">\n                        <div ngbDropdown class=\"card-header\">\n                          <div class=\"service-header\">\n                            <a href=\"javascript:;\"><h5 class=\"card-header-text\">Shivani Auto Port</h5></a>\n                          </div>\n                          <span ngbDropdownToggle class=\"dropdown-toggle addon-btn text-muted f-right service-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" role=\"tooltip\">\n                                         </span>\n                          <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right b-none services-list\">\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-edit\"></i> Edit</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-ui-delete\"></i> Delete</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-eye-alt\"></i> View</a>\n                          </div>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <p class=\"task-detail\">Lorem ipsum dolor sit amet, consectet ur adipisicing elit, sed do eiusmod temp or incidi dunt ut labore et.Lorem ipsum dolor sit amet, consecte.</p>\n                            </div>\n                            <!-- end of col-sm-8 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of card-body -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"card b-l-warning business-info services\">\n                        <div ngbDropdown class=\"card-header\">\n                          <div class=\"service-header\">\n                            <a href=\"javascript:;\"><h5 class=\"card-header-text\">Hair stylist</h5></a>\n                          </div>\n                          <span ngbDropdownToggle class=\"dropdown-toggle addon-btn text-muted f-right service-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" role=\"tooltip\">\n                                         </span>\n                          <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right b-none services-list\">\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-edit\"></i> Edit</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-ui-delete\"></i> Delete</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-eye-alt\"></i> View</a>\n                          </div>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <p class=\"task-detail\">Lorem ipsum dolor sit amet, consectet ur adipisicing elit, sed do eiusmod temp or incidi dunt ut labore et.Lorem ipsum dolor sit amet, consecte.</p>\n                            </div>\n                            <!-- end of col-sm-8 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of card-body -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"card b-l-danger business-info services\">\n                        <div ngbDropdown class=\"card-header\">\n                          <div class=\"service-header\">\n                            <a href=\"javascript:;\"><h5 class=\"card-header-text\">BMW India</h5></a>\n                          </div>\n                          <span ngbDropdownToggle class=\"dropdown-toggle addon-btn text-muted f-right service-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" role=\"tooltip\">\n                                         </span>\n                          <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right b-none services-list\">\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-edit\"></i> Edit</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-ui-delete\"></i> Delete</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-eye-alt\"></i> View</a>\n                          </div>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <p class=\"task-detail\">Lorem ipsum dolor sit amet, consectet ur adipisicing elit, sed do eiusmod temp or incidi dunt ut labore et.Lorem ipsum dolor sit amet, consecte.</p>\n                            </div>\n                            <!-- end of col-sm-8 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of card-body -->\n                      </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                      <div class=\"card b-l-success business-info services\">\n                        <div ngbDropdown class=\"card-header\">\n                          <div class=\"service-header\">\n                            <a href=\"javascript:;\"><h5 class=\"card-header-text\">Shivani Hero</h5></a>\n                          </div>\n                          <span ngbDropdownToggle class=\"dropdown-toggle addon-btn text-muted f-right service-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\" role=\"tooltip\">\n                                         </span>\n                          <div ngbDropdownMenu class=\"dropdown-menu dropdown-menu-right b-none services-list\">\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-edit\"></i> Edit</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-ui-delete\"></i> Delete</a>\n                            <a class=\"dropdown-item\" href=\"javascript:;\"><i class=\"icofont icofont-eye-alt\"></i> View</a>\n                          </div>\n                        </div>\n                        <div class=\"card-body\">\n                          <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                              <p class=\"task-detail\">Lorem ipsum dolor sit amet, consectet ur adipisicing elit, sed do eiusmod temp or incidi dunt ut labore et.Lorem ipsum dolor sit amet, consecte.</p>\n                            </div>\n                            <!-- end of col-sm-8 -->\n                          </div>\n                          <!-- end of row -->\n                        </div>\n                        <!-- end of card-body -->\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <!-- info card end -->\n            </div>\n          </ng-template>\n        </ngb-tab>\n        <ngb-tab title=\"Reviews\">\n          <ng-template ngbTabContent>\n            <div [@fadeInOutTranslate] class=\"m-t-15\">\n              <div class=\"card\">\n                <div class=\"card-header\">\n                  <h5 class=\"card-header-text\">Review</h5>\n                </div>\n                <div class=\"card-body\">\n                  <ul class=\"media-list\">\n                    <li class=\"media\">\n                      <div class=\"media-left\">\n                        <a href=\"javascript:;\">\n                          <img class=\"media-object img-radius comment-img\" src=\"assets/images/avatar-1.jpg\" alt=\"Generic placeholder image\">\n                        </a>\n                      </div>\n                      <div class=\"media-body\">\n                        <h6 class=\"media-heading\">Sortino media<span class=\"f-12 text-muted m-l-5\">Just now</span></h6>\n                        <div class=\"stars-example-css review-star\">\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                        </div>\n                        <p class=\"m-b-0\">Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis.</p>\n                        <div class=\"m-b-25\">\n                          <span><a href=\"javascript:;\" class=\"m-r-10 f-12\">Reply</a></span><span><a href=\"javascript:;\" class=\"f-12\">Edit</a> </span>\n                        </div>\n                        <hr>\n                        <!-- Nested media object -->\n                        <div class=\"media mt-2\">\n                          <a class=\"media-left\" href=\"javascript:;\">\n                            <img class=\"media-object img-radius comment-img\" src=\"assets/images/avatar-2.jpg\" alt=\"Generic placeholder image\">\n                          </a>\n                          <div class=\"media-body\">\n                            <h6 class=\"media-heading\">Larry heading <span class=\"f-12 text-muted m-l-5\">Just now</span></h6>\n                            <div class=\"stars-example-css review-star\">\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                            </div>\n                            <p class=\"m-b-0\"> Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis.</p>\n                            <div class=\"m-b-25\">\n                              <span><a href=\"javascript:;\" class=\"m-r-10 f-12\">Reply</a></span><span><a href=\"javascript:;\" class=\"f-12\">Edit</a> </span>\n                            </div>\n                            <hr>\n\n                          </div>\n                        </div>\n\n                      </div>\n                    </li>\n                    <!-- Nested media object -->\n                    <div class=\"media mt-2\">\n                      <div class=\"media-left\">\n                        <a href=\"javascript:;\">\n                          <img class=\"media-object img-radius comment-img\" src=\"assets/images/avatar-1.jpg\" alt=\"Generic placeholder image\">\n                        </a>\n                      </div>\n                      <div class=\"media-body\">\n                        <h6 class=\"media-heading\">Cedric Kelly<span class=\"f-12 text-muted m-l-5\">Just now</span></h6>\n                        <div class=\"stars-example-css review-star\">\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                        </div>\n                        <p class=\"m-b-0\">Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis.</p>\n                        <div class=\"m-b-25\">\n                          <span><a href=\"javascript:;\" class=\"m-r-10 f-12\">Reply</a></span><span><a href=\"javascript:;\" class=\"f-12\">Edit</a> </span>\n                        </div>\n                        <hr>\n                      </div>\n                    </div>\n                    <div class=\"media mt-2\">\n                      <a class=\"media-left\" href=\"javascript:;\">\n                        <img class=\"media-object img-radius comment-img\" src=\"assets/images/avatar-4.jpg\" alt=\"Generic placeholder image\">\n                      </a>\n                      <div class=\"media-body\">\n                        <h6 class=\"media-heading\">Larry heading <span class=\"f-12 text-muted m-l-5\">Just now</span></h6>\n                        <div class=\"stars-example-css review-star\">\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                        </div>\n                        <p class=\"m-b-0\"> Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis.</p>\n                        <div class=\"m-b-25\">\n                          <span><a href=\"javascript:;\" class=\"m-r-10 f-12\">Reply</a></span><span><a href=\"javascript:;\" class=\"f-12\">Edit</a> </span>\n                        </div>\n                        <hr>\n                        <!-- Nested media object -->\n                        <div class=\"media mt-2\">\n                          <div class=\"media-left\">\n                            <a href=\"javascript:;\">\n                              <img class=\"media-object img-radius comment-img\" src=\"assets/images/avatar-3.jpg\" alt=\"Generic placeholder image\">\n                            </a>\n                          </div>\n                          <div class=\"media-body\">\n                            <h6 class=\"media-heading\">Colleen Hurst <span class=\"f-12 text-muted m-l-5\">Just now</span></h6>\n                            <div class=\"stars-example-css review-star\">\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                              <i class=\"icofont icofont-star\"></i>\n                            </div>\n                            <p class=\"m-b-0\">Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis.</p>\n                            <div class=\"m-b-25\">\n                              <span><a href=\"javascript:;\" class=\"m-r-10 f-12\">Reply</a></span><span><a href=\"javascript:;\" class=\"f-12\">Edit</a> </span>\n                            </div>\n                          </div>\n                          <hr>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"media mt-2\">\n                      <div class=\"media-left\">\n                        <a href=\"javascript:;\">\n                          <img class=\"media-object img-radius comment-img\" src=\"assets/images/avatar-2.jpg\" alt=\"Generic placeholder image\">\n                        </a>\n                      </div>\n                      <div class=\"media-body\">\n                        <h6 class=\"media-heading\">Mark Doe<span class=\"f-12 text-muted m-l-5\">Just now</span></h6>\n                        <div class=\"stars-example-css review-star\">\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                          <i class=\"icofont icofont-star\"></i>\n                        </div>\n                        <p class=\"m-b-0\">Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin commodo. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis.</p>\n                        <div class=\"m-b-25\">\n                          <span><a href=\"javascript:;\" class=\"m-r-10 f-12\">Reply</a></span><span><a href=\"javascript:;\" class=\"f-12\">Edit</a> </span>\n                        </div>\n                        <hr>\n                      </div>\n                    </div>\n                  </ul>\n                  <div class=\"md-float-material d-flex\">\n                    <div class=\"md-group-add-on p-relative col-lg-12\">\n                      <div class=\"input-group input-group-button input-group-primary\">\n                        <span class=\"input-group-prepend\"><label class=\"input-group-text\"><i class=\"icofont icofont-comment\"></i></label></span>\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Write Comment\">\n                        <span class=\"input-group-append\"><label class=\"input-group-text\">\n                                       <button type=\"button\" class=\"btn btn-primary\"><i class=\"icofont icofont-plus\"></i>note</button>\n                        </label></span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ng-template>\n        </ngb-tab>\n      </ngb-tabset>\n    </div>\n  </div>\n</div>\n","/**\n * @license Angular v11.0.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n    /**  Constructs a new HTTP header object with the given values.*/\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach(line => {\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        const name = line.slice(0, index);\n                        const key = name.toLowerCase();\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            this.headers.get(key).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach(name => {\n                    let values = headers[name];\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param name The header name.\n     *\n     * @returns The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param name The header name from which to retrieve values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param name The header name for which to append the values.\n     * @param value The value to append.\n     *\n     * @returns A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param name The header name.\n     * @param value The value or values to set or overide for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param name The header name.\n     * @param value The value or values to delete for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(update => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach(key => {\n            this.headers.set(key, other.headers.get(key));\n            this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    }\n    clone(update) {\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    applyUpdate(update) {\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                let value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                const toDelete = update.value;\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(value => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * @internal\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param key The key name.\n     * @returns The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param value The value.\n     * @returns The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param key The encoded key name.\n     * @returns The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param value The encoded value.\n     * @returns The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\nfunction paramParser(rawParams, codec) {\n    const map = new Map();\n    if (rawParams.length > 0) {\n        const params = rawParams.split('&');\n        params.forEach((param) => {\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n    constructor(options = {}) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(key => {\n                const value = options.fromObject[key];\n                this.map.set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param param The parameter name.\n     * @returns True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return this.map.has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param param The parameter name.\n     * @returns The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        const res = this.map.get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param param The parameter name.\n     * @returns All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return this.map.get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @returns The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.map.keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param param The parameter name.\n     * @param value The new value to add.\n     * @return A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param param The parameter name.\n     * @param value The new value.\n     * @return A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param param The parameter name.\n     * @param value The value to remove, if provided.\n     * @return A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map(key => {\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value))\n                .join('&');\n        })\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter(param => param !== '')\n            .join('&');\n    }\n    clone(update) {\n        const clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n            this.updates.forEach(update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n                        base.push(update.value);\n                        this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            let base = this.map.get(update.param) || [];\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                this.map.set(update.param, base);\n                            }\n                            else {\n                                this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        const method = update.method || this.method;\n        const url = update.url || this.url;\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        let headers = update.headers || this.headers;\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((params, param) => params.set(param, update.setParams[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            reportProgress,\n            responseType,\n            withCredentials,\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * @publicApi\n */\nclass HttpClient {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        const res$ = events$.pipe(filter((event) => event instanceof HttpResponse));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = function HttpClient_Factory(t) { return new (t || HttpClient)(ɵngcc0.ɵɵinject(HttpHandler)); };\nHttpClient.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpClient, factory: HttpClient.ɵfac });\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClient, [{\n        type: Injectable\n    }], function () { return [{ type: HttpHandler }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = function NoopInterceptor_Factory(t) { return new (t || NoopInterceptor)(); };\nNoopInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopInterceptor, factory: NoopInterceptor.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopInterceptor, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            const callback = this.nextCallback();\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            let body = null;\n            // Whether the response callback has been called.\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            const cleanup = () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            const onLoad = (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK',\n                    url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            const onError = (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n}\nJsonpClientBackend.ɵfac = function JsonpClientBackend_Factory(t) { return new (t || JsonpClientBackend)(ɵngcc0.ɵɵinject(JsonpCallbackContext), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJsonpClientBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpClientBackend, factory: JsonpClientBackend.ɵfac });\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpClientBackend, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param req The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = function JsonpInterceptor_Factory(t) { return new (t || JsonpInterceptor)(ɵngcc0.ɵɵinject(JsonpClientBackend)); };\nJsonpInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpInterceptor, factory: JsonpInterceptor.ɵfac });\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpClientBackend }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nclass XhrFactory {\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    build() {\n        return (new XMLHttpRequest());\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\nBrowserXhr.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the HttpClientJsonpModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without HttpClientJsonpModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            const partialFromXhr = () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            const onLoad = () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            const onError = (error) => {\n                const { url } = partialFromXhr();\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            const onDownProgress = (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            const onUpProgress = (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                if (xhr.readyState !== xhr.DONE) {\n                    xhr.abort();\n                }\n            };\n        });\n    }\n}\nHttpXhrBackend.ɵfac = function HttpXhrBackend_Factory(t) { return new (t || HttpXhrBackend)(ɵngcc0.ɵɵinject(XhrFactory)); };\nHttpXhrBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXhrBackend, factory: HttpXhrBackend.ɵfac });\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXhrBackend, [{\n        type: Injectable\n    }], function () { return [{ type: XhrFactory }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = function HttpXsrfCookieExtractor_Factory(t) { return new (t || HttpXsrfCookieExtractor)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(XSRF_COOKIE_NAME)); };\nHttpXsrfCookieExtractor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfCookieExtractor, factory: HttpXsrfCookieExtractor.ɵfac });\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_COOKIE_NAME]\n            }] }]; }, null); })();\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = function HttpXsrfInterceptor_Factory(t) { return new (t || HttpXsrfInterceptor)(ɵngcc0.ɵɵinject(HttpXsrfTokenExtractor), ɵngcc0.ɵɵinject(XSRF_HEADER_NAME)); };\nHttpXsrfInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfInterceptor, factory: HttpXsrfInterceptor.ɵfac });\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: HttpXsrfTokenExtractor }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_HEADER_NAME]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    handle(req) {\n        if (this.chain === null) {\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = function HttpInterceptingHandler_Factory(t) { return new (t || HttpInterceptingHandler)(ɵngcc0.ɵɵinject(HttpBackend), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nHttpInterceptingHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpInterceptingHandler, factory: HttpInterceptingHandler.ɵfac });\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpInterceptingHandler, [{\n        type: Injectable\n    }], function () { return [{ type: HttpBackend }, { type: ɵngcc0.Injector }]; }, null); })();\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientXsrfModule_Factory(t) { return new (t || HttpClientXsrfModule)(); }, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientModule });\nHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientModule_Factory(t) { return new (t || HttpClientModule)(); }, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n        BrowserXhr,\n        { provide: XhrFactory, useExisting: BrowserXhr },\n    ], imports: [[\n            HttpClientXsrfModule.withOptions({\n                cookieName: 'XSRF-TOKEN',\n                headerName: 'X-XSRF-TOKEN'\n            }),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HttpClientModule, { imports: [HttpClientXsrfModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientModule, [{\n        type: NgModule,\n        args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN'\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientJsonpModule_Factory(t) { return new (t || HttpClientJsonpModule)(); }, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler, NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h };\n\n//# sourceMappingURL=http.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProfileRoutingModule } from './profile-routing.module';\nimport { ProfileComponent } from './profile.component';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProfileRoutingModule,\n    SharedModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  declarations: [ProfileComponent]\n})\nexport class ProfileModule { }\n"],"sourceRoot":"webpack:///"}