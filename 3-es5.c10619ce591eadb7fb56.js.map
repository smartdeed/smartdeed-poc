{"version":3,"sources":["webpack:///src/app/pages/map/google-map/google-map-routing.module.ts","webpack:///src/app/pages/map/google-map/google-map.module.ts","webpack:///src/app/pages/map/google-map/google-map.component.ts","webpack:///src/app/pages/map/google-map/google-map.component.html","webpack:///node_modules/@agm/core/__ivy_ngcc__/fesm2015/agm-core.js"],"names":["routes","path","component","data","breadcrumb","icon","breadcrumb_caption","status","GoogleMapRoutingModule","forChild","GoogleMapModule","forRoot","apiKey","GoogleMapComponent","lat","lng","latA","lngA","zoom","styles","featureType","stylers","saturation","elementType","hue","visibility","_c0","MapsAPILoader","ɵfac","MapsAPILoader_Factory","t","ɵprov","token","factory","GoogleMapsAPIWrapper","_loader","_zone","_map","Promise","resolve","_mapResolver","el","mapOptions","runOutsideAngular","load","then","map","google","maps","Map","options","m","setOptions","addToMap","Marker","InfoWindow","strokePosition","StrokePosition","Circle","Rectangle","getNativeMap","line","Polyline","setMap","polygon","Polygon","Data","newLayer","TransitLayer","visible","BicyclingLayer","latLng","geometry","poly","containsLocation","eventName","observer","addListener","arg","run","next","event","clearInstanceListeners","setCenter","getZoom","getBounds","getMapTypeId","setZoom","getCenter","panTo","x","y","panBy","padding","fitBounds","panToBounds","trigger","GoogleMapsAPIWrapper_Factory","LayerManager","_wrapper","_layers","layer","createTransitLayer","set","createBicyclingLayer","get","currentLayer","LayerManager_Factory","layerId","AgmBicyclingLayer","_manager","_addedToManager","_id","toString","addBicyclingLayer","changes","toggleLayerVisibility","currentValue","deleteLayer","AgmBicyclingLayer_Factory","ɵdir","type","selectors","inputs","features","CircleManager","_apiWrapper","_circles","circle","createCircle","center","latitude","longitude","clickable","draggable","editable","fillColor","fillOpacity","radius","strokeColor","strokeOpacity","strokeWeight","zIndex","c","getRadius","setEditable","setDraggable","setVisible","setRadius","listener","e","remove","CircleManager_Factory","AgmCircle_1","AgmCircle","centerChange","circleClick","circleDblClick","drag","dragEnd","dragStart","mouseDown","mouseMove","mouseOut","mouseOver","mouseUp","radiusChange","rightClick","_circleAddedToManager","_eventSubscriptions","addCircle","_registerEventListeners","_updateCircleOptionsChanges","optionKeys","Object","keys","filter","k","_mapOptions","indexOf","forEach","length","events","eventEmitter","push","createEventObservable","subscribe","value","emit","coords","s","unsubscribe","removeCircle","AgmCircle_Factory","outputs","DataLayerManager","createDataLayer","style","d","geoJson","getDataFeatures","l","feature","index","splice","setControlPosition","controlPosition","setControls","controls","setDrawingMode","drawingMode","setStyle","reject","addGeoJson","loadGeoJson","DataLayerManager_Factory","AgmDataLayer_1","layerId$1","AgmDataLayer","_subscriptions","layerClick","addDataLayer","_addEventListeners","listeners","name","handler","ev","obj","os","deleteDataLayer","geoJsonChange","updateGeoJson","dataOptions","_dataOptionsAttributes","hasOwnProperty","setDataOptions","AgmDataLayer_Factory","FitBoundsAccessor","FitBoundsService","loader","_boundsChangeSampleTime$","_includeInBounds$","bounds$","pipe","time","includeInBounds","_generateBounds","bounds","LatLngBounds","b","extend","id","_createIdentifier","has","timeMs","FitBoundsService_Factory","AgmFitBounds","_fitBoundsAccessor","_fitBoundsService","agmFitBounds","_destroyed$","_latestFitBoundsDetails","_updateBounds","getFitBoundsDetails$","details","newFitBoundsDetails","removeFromBounds","addToBounds","complete","AgmFitBounds_Factory","MarkerManager","_mapsWrapper","_markers","uiAnim","Animation","marker","setPosition","setTitle","title","setLabel","label","setIcon","iconUrl","setOpacity","opacity","setZIndex","setClickable","convertAnimation","animation","setAnimation","markerPromise","position","createMarker","MarkerManager_Factory","InfoWindowManager","_markerManager","_infoWindows","infoWindow","iWindow","i","close","w","hostMarker","getNativeMarker","open","content","maxWidth","disableAutoPan","infoWindowPromise","createInfoWindow","InfoWindowManager_Factory","AgmInfoWindow_1","infoWindowId","AgmInfoWindow","_infoWindowManager","_el","isOpen","infoWindowClose","_infoWindowAddedToManager","nativeElement","querySelector","addInfoWindow","_updateOpenState","_setInfoWindowOptions","_infoWindowOptionsInputs","deleteInfoWindow","AgmInfoWindow_Factory","ɵcmp","ngContentSelectors","decls","vars","consts","template","AgmInfoWindow_Template","rf","ctx","encapsulation","KmlLayerManager","KmlLayer","preserveViewport","screenOverlays","suppressInfoWindows","url","KmlLayerManager_Factory","AgmKmlLayer_1","layerId$2","AgmKmlLayer","defaultViewportChange","statusChange","addKmlLayer","_updatePolygonOptions","_kmlLayerOptions","reduce","deleteKmlLayer","AgmKmlLayer_Factory","createMVCEventObservable","array","eventNames","evName","previous","apply","getArray","_handler","evListeners","evListener","MvcArrayMock","vals","removeAt","elem","insert_at","deleted","pop","remove_at","set_at","callback","listenerArr","PolygonManager","_polygons","polygonPromise","createPolygon","geodesic","paths","setPaths","getPath","getPaths","p","agmPolygon","pathsChanges$","newArr","parentMVEvent","chMVC","chMVCEvent","pathIndex","retVal","subArr","toJSON","PolygonManager_Factory","PolylineManager_1","PolylineManager","_polylines","polylinePromise","_convertPoints","_convertIcons","icons","createPolyline","setPath","agmPolyline","polyline","getMVCPath","mvcPath","_getPoints","point","symbolPath","SymbolPath","_getIcons","agmIcon","fixedRotation","offset","repeat","anchor","Point","anchorX","anchorY","_convertPath","rotation","scale","entries","key","val","PolylineManager_Factory","RectangleManager","_rectangles","rectangle","createRectangle","north","east","south","west","r","setBounds","create","RectangleManager_Factory","AgmMap_1","AgmMap","_elem","_platformId","disableDoubleClickZoom","disableDefaultUI","scrollwheel","keyboardShortcuts","usePanning","scaleControl","mapTypeControl","panControl","rotateControl","fullscreenControl","mapTypeId","clickableIcons","showDefaultInfoWindow","gestureHandling","tilt","_observableSubscriptions","mapClick","mapRightClick","mapDblClick","boundsChange","mapTypeIdChange","idle","zoomChange","mapReady","tilesLoaded","container","_initMapInstance","createMap","minZoom","maxZoom","controlSize","backgroundColor","draggableCursor","draggingCursor","zoomControl","zoomControlOptions","streetViewControl","streetViewControlOptions","scaleControlOptions","mapTypeControlOptions","panControlOptions","rotateControlOptions","fullscreenControlOptions","restriction","_handleMapCenterChange","_handleMapZoomChange","_handleMapMouseEvents","_handleBoundsChange","_handleMapTypeIdChange","_handleTilesLoadedEvent","_handleIdleEvent","_fitBoundsSubscription","_updateMapOptionsChanges","_updatePosition","_mapOptionsAttributes","setMapOptions","recenter","setTimeout","triggerMapEvent","_fitBounds","_setCenter","newCenter","_subscribeToFitBoundsUpdates","fitBoundsPadding","getBounds$","_isLatLngBoundsLiteral","newBounds","union","undefined","subscribeToMapEvent","z","emitter","placeId","stop","AgmMap_Factory","hostVars","hostBindings","AgmMap_HostBindings","AgmMap_Template","AgmMarker_1","markerId","AgmMarker","openInfoWindow","animationChange","markerClick","markerDblClick","markerRightClick","_markerAddedToManger","_fitBoundsDetails$","handleInfoWindowUpdate","Error","Number","addMarker","_updateFitBoundsDetails","updateMarkerPosition","updateTitle","updateLabel","updateDraggable","updateIcon","updateOpacity","updateVisible","updateZIndex","updateClickable","updateAnimation","asObservable","cs","dcs","rc","ds","de","mover","mout","anChng","deleteMarker","AgmMarker_Factory","contentQueries","AgmMarker_ContentQueries","dirIndex","_t","provide","useExisting","AgmPolygon_1","AgmPolygon","_polygonManager","polyClick","polyDblClick","polyDrag","polyDragEnd","polyDragStart","polyMouseDown","polyMouseMove","polyMouseOut","polyMouseOver","polyMouseUp","polyRightClick","polyPathsChange","_polygonAddedToManager","_init","setPolygonOptions","addPolygon","handlers","createPathEventObservable","paths$","pathEvent","_polygonOptionsAttributes","deletePolygon","AgmPolygon_Factory","AgmPolylineIcon","AgmPolylineIcon_Factory","AgmPolylinePoint_1","AgmPolylinePoint","positionChanged","AgmPolylinePoint_Factory","AgmPolyline_1","polylineId","AgmPolyline","_polylineManager","lineClick","lineDblClick","lineDrag","lineDragEnd","lineDragStart","lineMouseDown","lineMouseMove","lineMouseOut","lineMouseOver","lineMouseUp","lineRightClick","polyPathChange","_polylineAddedToManager","points","updatePolylinePoints","pointSub","iconSub","iconSequences","updateIconSequences","_polylineOptionsAttributes","setPolylineOptions","addPolyline","ob$","toArray","deletePolyline","AgmPolyline_Factory","AgmPolyline_ContentQueries","AgmRectangle_1","AgmRectangle","rectangleClick","rectangleDblClick","_rectangleAddedToManager","addRectangle","_updateRectangleOptionsChanges","getNorthEast","getSouthWest","removeRectangle","AgmRectangle_Factory","layerId$3","AgmTransitLayer","addTransitLayer","AgmTransitLayer_Factory","google$1","ControlPosition","MapTypeId","MapTypeControlStyle","ScaleControlStyle","ZoomControlStyle","GeocoderLocationType","GeocoderStatus","AgmGeocoder","connectableGeocoder$","subscriber","_createGeocoder","connect","geocoder$","request","geocoder","_getGoogleResults","geocodeObservable","geocode","results","OK","Geocoder","AgmGeocoder_Factory","providedIn","ngInjectableDef","WindowRef","window","DocumentRef","document","BROWSER_GLOBALS_PROVIDERS","GoogleMapsScriptProtocol","LAZY_MAPS_API_CONFIG","LazyMapsAPILoader","config","localeId","_SCRIPT_ID","callbackName","_config","_windowRef","_documentRef","getNativeWindow","_scriptLoadingPromise","scriptOnPage","getNativeDocument","getElementById","_assignScriptLoadingPromise","script","createElement","async","defer","src","_getScriptSrc","body","appendChild","scriptElem","onerror","error","protocolType","protocol","HTTPS","AUTO","HTTP","hostAndPath","queryParams","v","apiVersion","client","clientId","channel","libraries","region","language","params","Array","isArray","join","entry","LazyMapsAPILoader_Factory","String","NoOpMapsAPILoader","AgmCoreModule_1","coreDirectives","AgmCoreModule","lazyMapsAPILoaderConfig","ngModule","providers","useClass","useValue","ɵmod","ɵinj","AgmCoreModule_Factory","ngJitMode","declarations","exports"],"mappings":"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","file":"3-es5.c10619ce591eadb7fb56.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {GoogleMapComponent} from './google-map.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GoogleMapComponent,\n    data: {\n      breadcrumb: 'Google Map',\n      icon: 'icofont-map bg-c-pink',\n      breadcrumb_caption: 'Lorem Ipsum Dolor Sit Amet, Consectetur Adipisicing Elit - Google Map',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GoogleMapRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GoogleMapRoutingModule } from './google-map-routing.module';\nimport { GoogleMapComponent } from './google-map.component';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {AgmCoreModule} from '@agm/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    GoogleMapRoutingModule,\n    SharedModule,\n    AgmCoreModule.forRoot({apiKey: 'AIzaSyCE0nvTeHBsiQIrbpMVTe489_O5mwyqofk'})\n  ],\n  declarations: [GoogleMapComponent]\n})\nexport class GoogleMapModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-google-map',\n  templateUrl: './google-map.component.html',\n  styleUrls: ['./google-map.component.scss']\n})\nexport class GoogleMapComponent implements OnInit {\n  lat = 21.1591857;\n  lng = 72.7522563;\n  latA = 21.7613308;\n  lngA = 71.6753074;\n  zoom = 8;\n\n  styles: any = [{\n    featureType: 'all',\n    stylers: [{\n      saturation: -80\n    }]\n  }, {\n    featureType: 'road.arterial',\n    elementType: 'geometry',\n    stylers: [{\n      hue: '#00ffee'\n    }, {\n      saturation: 50\n    }]\n  }, {\n    featureType: 'poi.business',\n    elementType: 'labels',\n    stylers: [{\n      visibility: 'off'\n    }]\n  }];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <app-card [title]=\"'Basic Map'\" [classHeader]=\"true\">\n      <span class=\"code-header\">use property <code>latitude, longitude</code> with <code>agm-map</code> element</span>\n      <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\"></agm-map>\n    </app-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <app-card [title]=\"'Markers Map'\" [classHeader]=\"true\">\n      <span class=\"code-header\">use element <code>agm-marker</code> with <code>agm-map</code> element</span>\n      <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"6\">\n        <agm-marker [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n        <agm-marker [latitude]=\"latA\" [longitude]=\"lngA\"></agm-marker>\n        <agm-marker [latitude]=\"21.6776887\" [longitude]=\"71.566261\"></agm-marker>\n        <agm-marker [latitude]=\"22.3220876\" [longitude]=\"73.1030464\"></agm-marker>\n        <agm-marker [latitude]=\"23.0201818\" [longitude]=\"72.4396587\"></agm-marker>\n        <agm-marker [latitude]=\"22.2734719\" [longitude]=\"70.7512565\"></agm-marker>\n      </agm-map>\n    </app-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <app-card [title]=\"'Styled Map'\" [classHeader]=\"true\">\n      <span class=\"code-header\">use property <code>styles</code> with <code>agm-map</code> element</span>\n      <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\" [styles]=\"styles\"></agm-map>\n    </app-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <app-card [title]=\"'Polylines'\" [classHeader]=\"true\">\n      <span class=\"code-header\">use property <code>styles</code> with <code>agm-map</code> element</span>\n      <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n        <agm-marker [latitude]=\"lat\" [longitude]=\"lng\"></agm-marker>\n        <agm-marker [latitude]=\"latA\" [longitude]=\"lngA\"></agm-marker>\n        <agm-polyline>\n          <agm-polyline-point [latitude]=\"lat\" [longitude]=\"lng\">\n          </agm-polyline-point>\n          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n          </agm-polyline-point>\n        </agm-polyline>\n      </agm-map>\n    </app-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <app-card [title]=\"'Info Window'\" [classHeader]=\"true\">\n      <span class=\"code-header\">use property <code>styles</code> with <code>agm-map</code> element</span>\n      <agm-map [latitude]=\"21.6776887\" [longitude]=\"71.566261\" [zoom]=\"zoom\" [disableDefaultUI]=\"false\" [zoomControl]=\"false\">\n        <agm-marker [latitude]=\"21.6776887\" [longitude]=\"71.566261\">\n          <agm-info-window>Nice Place</agm-info-window>\n        </agm-marker>\n      </agm-map>\n    </app-card>\n  </div>\n  <div class=\"col-sm-6\">\n    <app-card [title]=\"'Circle'\" [classHeader]=\"true\">\n      <span class=\"code-header\">use property <code>styles</code> with <code>agm-map</code> element</span>\n      <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n        <agm-circle\n          [latitude]=\"lat + 0.3\"\n          [longitude]=\"lng\"\n          [radius]=\"50000\"\n          [fillColor]=\"'red'\"\n          [circleDraggable]=\"true\"\n          [editable]=\"true\"\n        >\n        </agm-circle>\n      </agm-map>\n    </app-card>\n  </div>\n</div>\n","import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"*\"];\nlet MapsAPILoader = class MapsAPILoader {\n};\nMapsAPILoader.ɵfac = function MapsAPILoader_Factory(t) { return new (t || MapsAPILoader)(); };\nMapsAPILoader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MapsAPILoader, factory: function (t) { return MapsAPILoader.ɵfac(t); } });\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => { return new google.maps.InfoWindow(options); });\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (typeof options.strokePosition === 'string') {\n                    options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n                }\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                let data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n    createTransitLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n    createBicyclingLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then((m) => {\n                m.addListener(eventName, (arg) => { this._zone.run(() => observer.next(arg)); });\n            });\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n};\nGoogleMapsAPIWrapper.ɵfac = function GoogleMapsAPIWrapper_Factory(t) { return new (t || GoogleMapsAPIWrapper)(ɵngcc0.ɵɵinject(MapsAPILoader), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nGoogleMapsAPIWrapper.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GoogleMapsAPIWrapper, factory: function (t) { return GoogleMapsAPIWrapper.ɵfac(t); } });\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\nGoogleMapsAPIWrapper = __decorate([ __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])\n], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = class LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer, options) {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer, options) {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer, options) {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            }\n            else {\n                return this._wrapper.getNativeMap().then((map) => {\n                    currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n};\nLayerManager.ɵfac = function LayerManager_Factory(t) { return new (t || LayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper)); };\nLayerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LayerManager, factory: function (t) { return LayerManager.ɵfac(t); } });\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\nLayerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])\n], LayerManager);\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmBicyclingLayer.ɵfac = function AgmBicyclingLayer_Factory(t) { return new (t || AgmBicyclingLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmBicyclingLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmBicyclingLayer, selectors: [[\"agm-bicycling-layer\"]], inputs: { visible: \"visible\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([ __metadata(\"design:paramtypes\", [LayerManager])\n], AgmBicyclingLayer);\n\nlet CircleManager = class CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return this._circles.get(circle).then((c) => {\n            if (typeof options.strokePosition === 'string') {\n                options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n            }\n            c.setOptions(options);\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then((c) => { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nCircleManager.ɵfac = function CircleManager_Factory(t) { return new (t || CircleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nCircleManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: CircleManager, factory: function (t) { return CircleManager.ɵfac(t); } });\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nCircleManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], CircleManager);\n\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n};\nAgmCircle.ɵfac = function AgmCircle_Factory(t) { return new (t || AgmCircle)(ɵngcc0.ɵɵdirectiveInject(CircleManager)); };\nAgmCircle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmCircle, selectors: [[\"agm-circle\"]], inputs: { clickable: \"clickable\", draggable: [\"circleDraggable\", \"draggable\"], editable: \"editable\", radius: \"radius\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", latitude: \"latitude\", longitude: \"longitude\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { centerChange: \"centerChange\", circleClick: \"circleClick\", circleDblClick: \"circleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", radiusChange: \"radiusChange\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('circleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"radius\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([ __metadata(\"design:paramtypes\", [CircleManager])\n], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = class DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n};\nDataLayerManager.ɵfac = function DataLayerManager_Factory(t) { return new (t || DataLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nDataLayerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: DataLayerManager, factory: function (t) { return DataLayerManager.ɵfac(t); } });\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nDataLayerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], DataLayerManager);\n\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        let dataOptions = {};\n        AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n        this._manager.setDataOptions(this, dataOptions);\n    }\n};\nAgmDataLayer.ɵfac = function AgmDataLayer_Factory(t) { return new (t || AgmDataLayer)(ɵngcc0.ɵɵdirectiveInject(DataLayerManager)); };\nAgmDataLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmDataLayer, selectors: [[\"agm-data-layer\"]], inputs: { geoJson: \"geoJson\", style: \"style\" }, outputs: { layerClick: \"layerClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Function)\n], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([ __metadata(\"design:paramtypes\", [DataLayerManager])\n], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = class FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    }\n    removeFromBounds(latLng) {\n        const map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n};\nFitBoundsService.ɵfac = function FitBoundsService_Factory(t) { return new (t || FitBoundsService)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nFitBoundsService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: FitBoundsService, factory: function (t) { return FitBoundsService.ɵfac(t); } });\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nFitBoundsService = __decorate([ __metadata(\"design:paramtypes\", [MapsAPILoader])\n], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = class AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n};\nAgmFitBounds.ɵfac = function AgmFitBounds_Factory(t) { return new (t || AgmFitBounds)(ɵngcc0.ɵɵdirectiveInject(FitBoundsAccessor, 2), ɵngcc0.ɵɵdirectiveInject(FitBoundsService)); };\nAgmFitBounds.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmFitBounds, selectors: [[\"\", \"agmFitBounds\", \"\"]], inputs: { agmFitBounds: \"agmFitBounds\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([ __param(0, Self()),\n    __metadata(\"design:paramtypes\", [FitBoundsAccessor,\n        FitBoundsService])\n], AgmFitBounds);\n\nlet MarkerManager = class MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(marker) {\n        const m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then((m) => {\n            return this._zone.run(() => {\n                m.setMap(null);\n                this._markers.delete(marker);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable((observer) => {\n            this._markers.get(marker).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nMarkerManager.ɵfac = function MarkerManager_Factory(t) { return new (t || MarkerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nMarkerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MarkerManager, factory: function (t) { return MarkerManager.ɵfac(t); } });\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nMarkerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], MarkerManager);\n\nlet InfoWindowManager = class InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nInfoWindowManager.ɵfac = function InfoWindowManager_Factory(t) { return new (t || InfoWindowManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(MarkerManager)); };\nInfoWindowManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: InfoWindowManager, factory: function (t) { return InfoWindowManager.ɵfac(t); } });\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\nInfoWindowManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone,\n        MarkerManager])\n], InfoWindowManager);\n\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n};\nAgmInfoWindow.ɵfac = function AgmInfoWindow_Factory(t) { return new (t || AgmInfoWindow)(ɵngcc0.ɵɵdirectiveInject(InfoWindowManager), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nAgmInfoWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AgmInfoWindow, selectors: [[\"agm-info-window\"]], inputs: { isOpen: \"isOpen\", latitude: \"latitude\", longitude: \"longitude\", disableAutoPan: \"disableAutoPan\", zIndex: \"zIndex\", maxWidth: \"maxWidth\" }, outputs: { infoWindowClose: \"infoWindowClose\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"agm-info-window-content\"]], template: function AgmInfoWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([ __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])\n], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = class KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nKmlLayerManager.ɵfac = function KmlLayerManager_Factory(t) { return new (t || KmlLayerManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nKmlLayerManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: KmlLayerManager, factory: function (t) { return KmlLayerManager.ɵfac(t); } });\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nKmlLayerManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], KmlLayerManager);\n\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n};\nAgmKmlLayer.ɵfac = function AgmKmlLayer_Factory(t) { return new (t || AgmKmlLayer)(ɵngcc0.ɵɵdirectiveInject(KmlLayerManager)); };\nAgmKmlLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmKmlLayer, selectors: [[\"agm-kml-layer\"]], inputs: { clickable: \"clickable\", preserveViewport: \"preserveViewport\", screenOverlays: \"screenOverlays\", suppressInfoWindows: \"suppressInfoWindows\", url: \"url\", zIndex: \"zIndex\" }, outputs: { layerClick: \"layerClick\", defaultViewportChange: \"defaultViewportChange\", statusChange: \"statusChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([ __metadata(\"design:paramtypes\", [KmlLayerManager])\n], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern((handler) => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{ 'newArr': array.getArray(), evName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            'remove_at': [],\n            'insert_at': [],\n            'set_at': [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.map(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.map(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.map(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n}\n\nlet PolygonManager = class PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n            skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.evName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.evName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n};\nPolygonManager.ɵfac = function PolygonManager_Factory(t) { return new (t || PolygonManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolygonManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PolygonManager, factory: function (t) { return PolygonManager.ɵfac(t); } });\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolygonManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolygonManager);\n\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager_1._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager_1._convertPoints(line),\n            PolylineManager_1._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path,\n            icons: icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager_1._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => { return this._zone.run(() => { l.setPath(path); }); });\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager_1._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons: icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n};\nPolylineManager.ɵfac = function PolylineManager_Factory(t) { return new (t || PolylineManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nPolylineManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: PolylineManager, factory: function (t) { return PolylineManager.ɵfac(t); } });\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolylineManager = PolylineManager_1 = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolylineManager);\n\nlet RectangleManager = class RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return Observable.create((observer) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nRectangleManager.ɵfac = function RectangleManager_Factory(t) { return new (t || RectangleManager)(ɵngcc0.ɵɵinject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nRectangleManager.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RectangleManager, factory: function (t) { return RectangleManager.ɵfac(t); } });\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nRectangleManager = __decorate([ __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], RectangleManager);\n\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = AgmMap_1 = class AgmMap {\n    constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngOnInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        let newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach((e) => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe((event) => {\n                let value = {\n                    coords: {\n                        lat: event.latLng.lat(),\n                        lng: event.latLng.lng(),\n                    },\n                    placeId: event.placeId,\n                };\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (value.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(value);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n};\nAgmMap.ɵfac = function AgmMap_Factory(t) { return new (t || AgmMap)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(GoogleMapsAPIWrapper), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(FitBoundsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nAgmMap.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AgmMap, selectors: [[\"agm-map\"]], hostVars: 2, hostBindings: function AgmMap_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"sebm-google-map-container\", true);\n    } }, inputs: { longitude: \"longitude\", latitude: \"latitude\", zoom: \"zoom\", draggable: [\"mapDraggable\", \"draggable\"], disableDoubleClickZoom: \"disableDoubleClickZoom\", disableDefaultUI: \"disableDefaultUI\", scrollwheel: \"scrollwheel\", keyboardShortcuts: \"keyboardShortcuts\", styles: \"styles\", usePanning: \"usePanning\", fitBounds: \"fitBounds\", scaleControl: \"scaleControl\", mapTypeControl: \"mapTypeControl\", panControl: \"panControl\", rotateControl: \"rotateControl\", fullscreenControl: \"fullscreenControl\", mapTypeId: \"mapTypeId\", clickableIcons: \"clickableIcons\", showDefaultInfoWindow: \"showDefaultInfoWindow\", gestureHandling: \"gestureHandling\", tilt: \"tilt\", minZoom: \"minZoom\", maxZoom: \"maxZoom\", controlSize: \"controlSize\", backgroundColor: \"backgroundColor\", draggableCursor: \"draggableCursor\", draggingCursor: \"draggingCursor\", zoomControl: \"zoomControl\", zoomControlOptions: \"zoomControlOptions\", streetViewControl: \"streetViewControl\", streetViewControlOptions: \"streetViewControlOptions\", fitBoundsPadding: \"fitBoundsPadding\", scaleControlOptions: \"scaleControlOptions\", mapTypeControlOptions: \"mapTypeControlOptions\", panControlOptions: \"panControlOptions\", rotateControlOptions: \"rotateControlOptions\", fullscreenControlOptions: \"fullscreenControlOptions\", restriction: \"restriction\" }, outputs: { mapClick: \"mapClick\", mapRightClick: \"mapRightClick\", mapDblClick: \"mapDblClick\", centerChange: \"centerChange\", boundsChange: \"boundsChange\", mapTypeIdChange: \"mapTypeIdChange\", idle: \"idle\", zoomChange: \"zoomChange\", mapReady: \"mapReady\", tilesLoaded: \"tilesLoaded\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 3, vars: 0, consts: [[1, \"agm-map-container-inner\", \"sebm-google-map-container-inner\"], [1, \"agm-map-content\"]], template: function AgmMap_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".agm-map-container-inner[_ngcontent-%COMP%] {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content[_ngcontent-%COMP%] {\\n      display:none;\\n    }\"] });\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([\n    Input('mapDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmMap.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"tilt\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"restriction\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"idle\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([ __param(2, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleMapsAPIWrapper,\n        Object,\n        FitBoundsService,\n        NgZone])\n], AgmMap);\n\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         *\n         * @memberof AgmMarker\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe((e) => {\n            this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe((e) => {\n            this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe((e) => {\n            this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe((e) => {\n            this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe((e) => {\n            this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmMarker.ɵfac = function AgmMarker_Factory(t) { return new (t || AgmMarker)(ɵngcc0.ɵɵdirectiveInject(MarkerManager)); };\nAgmMarker.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmMarker, selectors: [[\"agm-marker\"]], contentQueries: function AgmMarker_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmInfoWindow, false);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infoWindow = _t);\n    } }, inputs: { latitude: \"latitude\", longitude: \"longitude\", title: \"title\", label: \"label\", draggable: [\"markerDraggable\", \"draggable\"], iconUrl: \"iconUrl\", openInfoWindow: \"openInfoWindow\", opacity: \"opacity\", visible: \"visible\", zIndex: \"zIndex\", animation: \"animation\", clickable: [\"markerClickable\", \"clickable\"] }, outputs: { markerClick: \"markerClick\", dragStart: \"dragStart\", drag: \"drag\", dragEnd: \"dragEnd\", mouseOver: \"mouseOver\", mouseOut: \"mouseOut\", animationChange: \"animationChange\", markerDblClick: \"markerDblClick\", markerRightClick: \"markerRightClick\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"title\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"label\", void 0);\n__decorate([\n    Input('markerDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([\n    Input('markerClickable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"animation\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([\n    ContentChildren(AgmInfoWindow),\n    __metadata(\"design:type\", QueryList)\n], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([ __metadata(\"design:paramtypes\", [MarkerManager])\n], AgmMarker);\n\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n};\nAgmPolygon.ɵfac = function AgmPolygon_Factory(t) { return new (t || AgmPolygon)(ɵngcc0.ɵɵdirectiveInject(PolygonManager)); };\nAgmPolygon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmPolygon, selectors: [[\"agm-polygon\"]], inputs: { clickable: \"clickable\", draggable: [\"polyDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", paths: \"paths\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", visible: \"visible\", zIndex: \"zIndex\" }, outputs: { polyClick: \"polyClick\", polyDblClick: \"polyDblClick\", polyDrag: \"polyDrag\", polyDragEnd: \"polyDragEnd\", polyDragStart: \"polyDragStart\", polyMouseDown: \"polyMouseDown\", polyMouseMove: \"polyMouseMove\", polyMouseOut: \"polyMouseOut\", polyMouseOver: \"polyMouseOver\", polyMouseUp: \"polyMouseUp\", polyRightClick: \"polyRightClick\", polyPathsChange: \"polyPathsChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polyDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([ __metadata(\"design:paramtypes\", [PolygonManager])\n], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nlet AgmPolylineIcon = class AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n};\nAgmPolylineIcon.ɵfac = function AgmPolylineIcon_Factory(t) { return new (t || AgmPolylineIcon)(); };\nAgmPolylineIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmPolylineIcon, selectors: [[\"agm-icon-sequence\"]], inputs: { fixedRotation: \"fixedRotation\", offset: \"offset\", repeat: \"repeat\", anchorX: \"anchorX\", anchorY: \"anchorY\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", path: \"path\", rotation: \"rotation\", scale: \"scale\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\" } });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\n\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            const position = {\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            };\n            this.positionChanged.emit(position);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n};\nAgmPolylinePoint.ɵfac = function AgmPolylinePoint_Factory(t) { return new (t || AgmPolylinePoint)(); };\nAgmPolylinePoint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmPolylinePoint, selectors: [[\"agm-polyline-point\"]], inputs: { latitude: \"latitude\", longitude: \"longitude\" }, outputs: { positionChanged: \"positionChanged\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n        ]), ɵngcc0.ɵɵNgOnChangesFeature] });\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([ __metadata(\"design:paramtypes\", [])\n], AgmPolylinePoint);\n\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        let options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmPolyline.ɵfac = function AgmPolyline_Factory(t) { return new (t || AgmPolyline)(ɵngcc0.ɵɵdirectiveInject(PolylineManager)); };\nAgmPolyline.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmPolyline, selectors: [[\"agm-polyline\"]], contentQueries: function AgmPolyline_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylinePoint, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, AgmPolylineIcon, false);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.points = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.iconSequences = _t);\n    } }, inputs: { clickable: \"clickable\", draggable: [\"polylineDraggable\", \"draggable\"], editable: \"editable\", geodesic: \"geodesic\", visible: \"visible\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", strokeWeight: \"strokeWeight\", zIndex: \"zIndex\" }, outputs: { lineClick: \"lineClick\", lineDblClick: \"lineDblClick\", lineDrag: \"lineDrag\", lineDragEnd: \"lineDragEnd\", lineDragStart: \"lineDragStart\", lineMouseDown: \"lineMouseDown\", lineMouseMove: \"lineMouseMove\", lineMouseOut: \"lineMouseOut\", lineMouseOver: \"lineMouseOver\", lineMouseUp: \"lineMouseUp\", lineRightClick: \"lineRightClick\", polyPathChange: \"polyPathChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polylineDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([\n    ContentChildren(AgmPolylinePoint),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"points\", void 0);\n__decorate([\n    ContentChildren(AgmPolylineIcon),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([ __metadata(\"design:paramtypes\", [PolylineManager])\n], AgmPolyline);\n\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                        });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n};\nAgmRectangle.ɵfac = function AgmRectangle_Factory(t) { return new (t || AgmRectangle)(ɵngcc0.ɵɵdirectiveInject(RectangleManager)); };\nAgmRectangle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmRectangle, selectors: [[\"agm-rectangle\"]], inputs: { clickable: \"clickable\", draggable: [\"rectangleDraggable\", \"draggable\"], editable: \"editable\", strokePosition: \"strokePosition\", strokeWeight: \"strokeWeight\", visible: \"visible\", north: \"north\", east: \"east\", south: \"south\", west: \"west\", fillColor: \"fillColor\", fillOpacity: \"fillOpacity\", strokeColor: \"strokeColor\", strokeOpacity: \"strokeOpacity\", zIndex: \"zIndex\" }, outputs: { boundsChange: \"boundsChange\", rectangleClick: \"rectangleClick\", rectangleDblClick: \"rectangleDblClick\", drag: \"drag\", dragEnd: \"dragEnd\", dragStart: \"dragStart\", mouseDown: \"mouseDown\", mouseMove: \"mouseMove\", mouseOut: \"mouseOut\", mouseOver: \"mouseOver\", mouseUp: \"mouseUp\", rightClick: \"rightClick\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"north\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"east\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"south\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"west\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('rectangleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([ __metadata(\"design:paramtypes\", [RectangleManager])\n], AgmRectangle);\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = class AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmTransitLayer.ɵfac = function AgmTransitLayer_Factory(t) { return new (t || AgmTransitLayer)(ɵngcc0.ɵɵdirectiveInject(LayerManager)); };\nAgmTransitLayer.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: AgmTransitLayer, selectors: [[\"agm-transit-layer\"]], inputs: { visible: \"visible\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([ __metadata(\"design:paramtypes\", [LayerManager])\n], AgmTransitLayer);\n\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n    SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n    SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n    SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n    ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n    ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n    ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n    ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n    ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n    ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n    ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n    ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n    ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n    ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n    ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n    /** This map type displays a transparent layer of major streets on satellite images. */\n    MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n    /** This map type displays a normal street map. */\n    MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n    /** This map type displays satellite images. */\n    MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n    /** This map type displays maps with physical features such as terrain and vegetation. */\n    MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n    MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n    MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n    ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n    ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n    ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n    GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n    GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n    GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n    GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n    GeocoderStatus[\"ERROR\"] = \"ERROR\";\n    GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n    GeocoderStatus[\"OK\"] = \"OK\";\n    GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n    GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n    GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nlet AgmGeocoder = class AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n};\nAgmGeocoder.ɵfac = function AgmGeocoder_Factory(t) { return new (t || AgmGeocoder)(ɵngcc0.ɵɵinject(MapsAPILoader)); };\nAgmGeocoder.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AgmGeocoder, factory: function (t) { return AgmGeocoder.ɵfac(t); }, providedIn: 'root' });\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder = __decorate([ __metadata(\"design:paramtypes\", [MapsAPILoader])\n], AgmGeocoder);\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        let protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            let i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n};\nLazyMapsAPILoader.ɵfac = function LazyMapsAPILoader_Factory(t) { return new (t || LazyMapsAPILoader)(ɵngcc0.ɵɵinject(LAZY_MAPS_API_CONFIG, 8), ɵngcc0.ɵɵinject(WindowRef), ɵngcc0.ɵɵinject(DocumentRef), ɵngcc0.ɵɵinject(LOCALE_ID)); };\nLazyMapsAPILoader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LazyMapsAPILoader, factory: function (t) { return LazyMapsAPILoader.ɵfac(t); } });\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nLazyMapsAPILoader = __decorate([ __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)),\n    __param(3, Inject(LOCALE_ID)),\n    __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])\n], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\n// exported map types\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMarker,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmTransitLayer,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule_1,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n};\nAgmCoreModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AgmCoreModule });\nAgmCoreModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AgmCoreModule_Factory(t) { return new (t || AgmCoreModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MapsAPILoader, [{\n        type: Injectable\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GoogleMapsAPIWrapper, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmBicyclingLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-bicycling-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CircleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmCircle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-circle'\n            }]\n    }], function () { return [{ type: CircleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['circleDraggable']\n        }], editable: [{\n            type: Input\n        }], radius: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], centerChange: [{\n            type: Output\n        }], circleClick: [{\n            type: Output\n        }], circleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], radiusChange: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmDataLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-data-layer'\n            }]\n    }], function () { return [{ type: DataLayerManager }]; }, { layerClick: [{\n            type: Output\n        }], geoJson: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FitBoundsService, [{\n        type: Injectable\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmFitBounds, [{\n        type: Directive,\n        args: [{\n                selector: '[agmFitBounds]'\n            }]\n    }], function () { return [{ type: FitBoundsAccessor, decorators: [{\n                type: Self\n            }] }, { type: FitBoundsService }]; }, { agmFitBounds: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MarkerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InfoWindowManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }, { type: MarkerManager }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmInfoWindow, [{\n        type: Component,\n        args: [{\n                selector: 'agm-info-window',\n                template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: InfoWindowManager }, { type: ɵngcc0.ElementRef }]; }, { isOpen: [{\n            type: Input\n        }], infoWindowClose: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], disableAutoPan: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], maxWidth: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(KmlLayerManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmKmlLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-kml-layer'\n            }]\n    }], function () { return [{ type: KmlLayerManager }]; }, { clickable: [{\n            type: Input\n        }], preserveViewport: [{\n            type: Input\n        }], screenOverlays: [{\n            type: Input\n        }], suppressInfoWindows: [{\n            type: Input\n        }], url: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], layerClick: [{\n            type: Output\n        }], defaultViewportChange: [{\n            type: Output\n        }], statusChange: [{\n            type: Output\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PolygonManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PolylineManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RectangleManager, [{\n        type: Injectable\n    }], function () { return [{ type: GoogleMapsAPIWrapper }, { type: ɵngcc0.NgZone }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmMap, [{\n        type: Component,\n        args: [{\n                selector: 'agm-map',\n                providers: [\n                    CircleManager,\n                    DataLayerManager,\n                    DataLayerManager,\n                    FitBoundsService,\n                    GoogleMapsAPIWrapper,\n                    InfoWindowManager,\n                    KmlLayerManager,\n                    LayerManager,\n                    MarkerManager,\n                    PolygonManager,\n                    PolylineManager,\n                    RectangleManager,\n                ],\n                host: {\n                    // todo: deprecated - we will remove it with the next version\n                    '[class.sebm-google-map-container]': 'true'\n                },\n                template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n                styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: GoogleMapsAPIWrapper }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: FitBoundsService }, { type: ɵngcc0.NgZone }]; }, { longitude: [{\n            type: Input\n        }], latitude: [{\n            type: Input\n        }], zoom: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['mapDraggable']\n        }], disableDoubleClickZoom: [{\n            type: Input\n        }], disableDefaultUI: [{\n            type: Input\n        }], scrollwheel: [{\n            type: Input\n        }], keyboardShortcuts: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], usePanning: [{\n            type: Input\n        }], fitBounds: [{\n            type: Input\n        }], scaleControl: [{\n            type: Input\n        }], mapTypeControl: [{\n            type: Input\n        }], panControl: [{\n            type: Input\n        }], rotateControl: [{\n            type: Input\n        }], fullscreenControl: [{\n            type: Input\n        }], mapTypeId: [{\n            type: Input\n        }], clickableIcons: [{\n            type: Input\n        }], showDefaultInfoWindow: [{\n            type: Input\n        }], gestureHandling: [{\n            type: Input\n        }], tilt: [{\n            type: Input\n        }], mapClick: [{\n            type: Output\n        }], mapRightClick: [{\n            type: Output\n        }], mapDblClick: [{\n            type: Output\n        }], centerChange: [{\n            type: Output\n        }], boundsChange: [{\n            type: Output\n        }], mapTypeIdChange: [{\n            type: Output\n        }], idle: [{\n            type: Output\n        }], zoomChange: [{\n            type: Output\n        }], mapReady: [{\n            type: Output\n        }], tilesLoaded: [{\n            type: Output\n        }], minZoom: [{\n            type: Input\n        }], maxZoom: [{\n            type: Input\n        }], controlSize: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], draggableCursor: [{\n            type: Input\n        }], draggingCursor: [{\n            type: Input\n        }], zoomControl: [{\n            type: Input\n        }], zoomControlOptions: [{\n            type: Input\n        }], streetViewControl: [{\n            type: Input\n        }], streetViewControlOptions: [{\n            type: Input\n        }], fitBoundsPadding: [{\n            type: Input\n        }], scaleControlOptions: [{\n            type: Input\n        }], mapTypeControlOptions: [{\n            type: Input\n        }], panControlOptions: [{\n            type: Input\n        }], rotateControlOptions: [{\n            type: Input\n        }], fullscreenControlOptions: [{\n            type: Input\n        }], restriction: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmMarker, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-marker',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n                ],\n                inputs: [\n                    'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                    'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n                ],\n                outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut']\n            }]\n    }], function () { return [{ type: MarkerManager }]; }, { draggable: [{\n            type: Input,\n            args: ['markerDraggable']\n        }], visible: [{\n            type: Input\n        }], openInfoWindow: [{\n            type: Input\n        }], opacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], clickable: [{\n            type: Input,\n            args: ['markerClickable']\n        }], animationChange: [{\n            type: Output\n        }], markerClick: [{\n            type: Output\n        }], markerDblClick: [{\n            type: Output\n        }], markerRightClick: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], infoWindow: [{\n            type: ContentChildren,\n            args: [AgmInfoWindow]\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], iconUrl: [{\n            type: Input\n        }], animation: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmPolygon, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polygon'\n            }]\n    }], function () { return [{ type: PolygonManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polyDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], paths: [{\n            type: Input\n        }], polyClick: [{\n            type: Output\n        }], polyDblClick: [{\n            type: Output\n        }], polyDrag: [{\n            type: Output\n        }], polyDragEnd: [{\n            type: Output\n        }], polyDragStart: [{\n            type: Output\n        }], polyMouseDown: [{\n            type: Output\n        }], polyMouseMove: [{\n            type: Output\n        }], polyMouseOut: [{\n            type: Output\n        }], polyMouseOver: [{\n            type: Output\n        }], polyMouseUp: [{\n            type: Output\n        }], polyRightClick: [{\n            type: Output\n        }], polyPathsChange: [{\n            type: Output\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmPolylineIcon, [{\n        type: Directive,\n        args: [{ selector: 'agm-polyline agm-icon-sequence' }]\n    }], null, { fixedRotation: [{\n            type: Input\n        }], offset: [{\n            type: Input\n        }], repeat: [{\n            type: Input\n        }], anchorX: [{\n            type: Input\n        }], anchorY: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], path: [{\n            type: Input\n        }], rotation: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmPolylinePoint, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline-point',\n                providers: [\n                    { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n                ]\n            }]\n    }], function () { return []; }, { positionChanged: [{\n            type: Output\n        }], latitude: [{\n            type: Input\n        }], longitude: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmPolyline, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-polyline'\n            }]\n    }], function () { return [{ type: PolylineManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['polylineDraggable']\n        }], editable: [{\n            type: Input\n        }], geodesic: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], lineClick: [{\n            type: Output\n        }], lineDblClick: [{\n            type: Output\n        }], lineDrag: [{\n            type: Output\n        }], lineDragEnd: [{\n            type: Output\n        }], lineDragStart: [{\n            type: Output\n        }], lineMouseDown: [{\n            type: Output\n        }], lineMouseMove: [{\n            type: Output\n        }], lineMouseOut: [{\n            type: Output\n        }], lineMouseOver: [{\n            type: Output\n        }], lineMouseUp: [{\n            type: Output\n        }], lineRightClick: [{\n            type: Output\n        }], polyPathChange: [{\n            type: Output\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }], points: [{\n            type: ContentChildren,\n            args: [AgmPolylinePoint]\n        }], iconSequences: [{\n            type: ContentChildren,\n            args: [AgmPolylineIcon]\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmRectangle, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-rectangle'\n            }]\n    }], function () { return [{ type: RectangleManager }]; }, { clickable: [{\n            type: Input\n        }], draggable: [{\n            type: Input,\n            args: ['rectangleDraggable']\n        }], editable: [{\n            type: Input\n        }], strokePosition: [{\n            type: Input\n        }], strokeWeight: [{\n            type: Input\n        }], visible: [{\n            type: Input\n        }], boundsChange: [{\n            type: Output\n        }], rectangleClick: [{\n            type: Output\n        }], rectangleDblClick: [{\n            type: Output\n        }], drag: [{\n            type: Output\n        }], dragEnd: [{\n            type: Output\n        }], dragStart: [{\n            type: Output\n        }], mouseDown: [{\n            type: Output\n        }], mouseMove: [{\n            type: Output\n        }], mouseOut: [{\n            type: Output\n        }], mouseOver: [{\n            type: Output\n        }], mouseUp: [{\n            type: Output\n        }], rightClick: [{\n            type: Output\n        }], north: [{\n            type: Input\n        }], east: [{\n            type: Input\n        }], south: [{\n            type: Input\n        }], west: [{\n            type: Input\n        }], fillColor: [{\n            type: Input\n        }], fillOpacity: [{\n            type: Input\n        }], strokeColor: [{\n            type: Input\n        }], strokeOpacity: [{\n            type: Input\n        }], zIndex: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmTransitLayer, [{\n        type: Directive,\n        args: [{\n                selector: 'agm-transit-layer'\n            }]\n    }], function () { return [{ type: LayerManager }]; }, { visible: [{\n            type: Input\n        }] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmGeocoder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MapsAPILoader }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LazyMapsAPILoader, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LAZY_MAPS_API_CONFIG]\n            }] }, { type: WindowRef }, { type: DocumentRef }, { type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AgmCoreModule, { declarations: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer], exports: [AgmBicyclingLayer, AgmCircle, AgmDataLayer, AgmFitBounds, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AgmCoreModule, [{\n        type: NgModule,\n        args: [{ declarations: coreDirectives(), exports: coreDirectives() }]\n    }], null, null); })();\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n\n//# sourceMappingURL=agm-core.js.map"]}