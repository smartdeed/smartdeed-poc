{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home-routing.module.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/pages/home/home.module.ts"],"names":["buildChartJS","a","b","f","c","labels","datasets","label","borderColor","borderWidth","hitRadius","pointHoverRadius","pointBorderWidth","pointHoverBorderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","fill","backgroundColor","data","routes","path","component","HomeComponent","router","totalValueGraphData1","totalValueGraphData2","totalValueGraphOption","title","display","tooltips","enabled","intersect","mode","xPadding","yPadding","caretPadding","legend","usePointStyle","responsive","maintainAspectRatio","hover","scales","xAxes","gridLines","scaleLabel","labelString","yAxes","ticks","beginAtZero","elements","point","radius","layout","padding","left","right","top","bottom","AmCharts","makeChart","type","marginTop","marginRight","dataProvider","year","value","valueAxes","axisAlpha","dashLength","gridAlpha","position","graphs","id","bullet","bulletSize","lineColor","lineThickness","negativeLineColor","valueField","chartCursor","cursorAlpha","valueLineEnabled","valueLineBalloonEnabled","valueLineAlpha","color","cursorColor","fullWidth","categoryField","categoryAxis","fillAlpha","fillColor","minorGridAlpha","minorGridEnabled","theme","axes","tickAlpha","labelsEnabled","startValue","endValue","startAngle","endAngle","bands","innerRadius","dataDateFormat","precision","autoGridCount","labelFunction","g","Math","round","fontSize","axesAlpha","valueAxis","fillColors","fillAlphas","clustered","columnWidth","legendValueText","balloonText","bulletBorderAlpha","bulletColor","hideBulletsCount","useLineColorForBulletBorder","pan","parseDates","GridAlpha","useGraphSettings","balloon","borderThickness","shadowAlpha","date","market1","market2","sales1","sales2","event","target","parentNode","classList","toggle","this","navigate","goToWizard","breadcrumb","icon","status","HomeRoutingModule","forChild","HomeModule","CommonModule","ChartModule"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport '../../../assets/charts/amchart/amcharts.js';\nimport '../../../assets/charts/amchart/gauge.js';\nimport '../../../assets/charts/amchart/pie.js';\nimport '../../../assets/charts/amchart/serial.js';\nimport '../../../assets/charts/amchart/light.js';\nimport '../../../assets/charts/amchart/ammap.js';\nimport '../../../assets/charts/amchart/worldLow.js';\n\ndeclare const AmCharts: any;\ndeclare const $: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: [\n    './home.component.css',\n    '../../../assets/icon/svg-animated/svg-weather.css'\n  ]\n})\nexport class HomeComponent implements OnInit {\n  totalValueGraphData1 = buildChartJS('#fff', [45, 25, 35, 20, 45, 20, 40, 10, 30, 45], '#3a73f1', 'transparent');\n  totalValueGraphData2 = buildChartJS('#fff', [10, 25, 35, 20, 10, 20, 15, 45, 15, 10], '#e55571', 'transparent');\n  totalValueGraphOption = buildChartOption();\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    AmCharts.makeChart('statistics-chart', {\n      type: 'serial',\n      marginTop: 0,\n\n      marginRight: 0,\n      dataProvider: [{\n        year: 'Jan',\n        value: 0.98\n      }, {\n        year: 'Feb',\n        value: 1.87\n      }, {\n        year: 'Mar',\n        value: 0.97\n      }, {\n        year: 'Apr',\n        value: 1.64\n      }, {\n        year: 'May',\n        value: 0.4\n      }, {\n        year: 'Jun',\n        value: 2.9\n      }, {\n        year: 'Jul',\n        value: 5.2\n      }, {\n        year: 'Aug',\n        value: 0.77\n      }, {\n        year: 'Sap',\n        value: 3.1\n      }],\n      valueAxes: [{\n        axisAlpha: 0,\n        dashLength: 6,\n        gridAlpha: 0.1,\n        position: 'left'\n      }],\n      graphs: [{\n        id: 'g1',\n        bullet: 'round',\n        bulletSize: 9,\n        lineColor: '#4680ff',\n        lineThickness: 2,\n        negativeLineColor: '#4680ff',\n        type: 'smoothedLine',\n        valueField: 'value'\n      }],\n      chartCursor: {\n        cursorAlpha: 0,\n        valueLineEnabled: false,\n        valueLineBalloonEnabled: true,\n        valueLineAlpha: false,\n        color: '#fff',\n        cursorColor: '#FC6180',\n        fullWidth: true\n      },\n      categoryField: 'year',\n      categoryAxis: {\n        gridAlpha: 0,\n        axisAlpha: 0,\n        fillAlpha: 1,\n        fillColor: '#FAFAFA',\n        minorGridAlpha: 0,\n        minorGridEnabled: true\n      },\n      'export': {\n        enabled: true\n      }\n    });\n    AmCharts.makeChart('solid-gauge1', {\n      type: 'gauge',\n\n      theme: 'light',\n      axes: [{\n        axisAlpha: 0,\n        tickAlpha: 0,\n        labelsEnabled: false,\n        startValue: 0,\n        endValue: 100,\n        startAngle: 0,\n        endAngle: 360,\n        bands: [{\n          color: '#E5E5E5',\n          startValue: -35,\n          endValue: 35,\n          radius: '100%',\n          innerRadius: '92%'\n        }, {\n          color: '#93BE52',\n          startValue: -35,\n          endValue: 20,\n          radius: '100%',\n          innerRadius: '92%'\n        }]\n      }],\n      'export': {\n        enabled: true\n      }\n    });\n    AmCharts.makeChart('email-sent', {\n      type: 'serial',\n      theme: 'light',\n\n      dataDateFormat: 'YYYY-MM-DD',\n      precision: 2,\n      valueAxes: [\n        {\n          id: 'v1',\n          title: 'Sales',\n          position: 'left',\n          autoGridCount: false,\n          labelFunction: function (g) {\n            return Math.round(g);\n          }\n        },\n        {\n          id: 'v2',\n          title: '',\n          gridAlpha: 0,\n          fontSize: 0,\n          axesAlpha: 0,\n          position: 'left',\n          autoGridCount: false\n        }\n      ],\n      graphs:\n        [\n          {\n            id: 'g3',\n            valueAxis: 'v1',\n            lineColor: '#4680ff',\n            fillColors: '#4680ff',\n            fillAlphas: 1,\n            type: 'column',\n            title: 'Actual Sales',\n            valueField: 'sales2',\n            clustered: true,\n            columnWidth: 0.4,\n            legendValueText: '$[[value]]M',\n            balloonText: '[[title]]<br /><b style=\"font-size: 130%\">$[[value]]M</b>'\n          },\n          {\n            id: 'g4',\n            valueAxis: 'v1',\n            lineColor: '#FC6180',\n            fillColors: '#FC6180',\n            fillAlphas: 1,\n            type: 'column',\n            title: 'Target Sales',\n            valueField: 'sales1',\n            clustered: true,\n            columnWidth: 0.4,\n            legendValueText: '$[[value]]M',\n            balloonText: '[[title]]<br /><b style=\"font-size: 130%\">$[[value]]M</b>'\n          },\n          {\n            id: 'g1',\n            valueAxis: 'v2',\n            bullet: 'round',\n            bulletBorderAlpha: 0,\n            bulletColor: 'transparent',\n            bulletSize: 0,\n            hideBulletsCount: 50,\n            lineThickness: 3,\n            dashLength: 10,\n            lineColor: '#93BE52',\n            type: 'smoothedLine',\n            title: 'Market Days',\n            useLineColorForBulletBorder: true,\n            valueField: 'market1',\n            balloonText: '[[title]]<br /><b style=\"font-size: 130% \">[[value]]</b>'\n          },\n          {\n            id: 'v3',\n            valueAxis: 'v1',\n            lineColor: '#FFB64D',\n            fillColors: '#FFB64D',\n            fillAlphas: 1,\n            type: 'column',\n            title: 'Actual Sales',\n            valueField: 'sales2',\n            clustered: true,\n            columnWidth: 0.4,\n            legendValueText: '$[[value]]M',\n            balloonText: '[[title]]<br /><b style=\"font-size: 130%>$[[value]]M</b>'\n          }\n        ],\n      chartCursor: {\n        pan: true,\n        valueLineEnabled: true,\n        valueLineBalloonEnabled: true,\n        cursorAlpha: 0,\n        valueLineAlpha: 0.2\n      },\n      categoryField: 'date',\n      categoryAxis: {\n        parseDates: true,\n        dashLength: 0,\n        axisAlpha: 0,\n        GridAlpha: 0,\n        minorGridEnabled: true\n      },\n      legend: {\n        useGraphSettings: true,\n        position: 'top'\n      },\n      balloon: {\n        borderThickness: 1,\n        shadowAlpha: 0\n      },\n      'export': {\n        enabled: true\n      },\n      dataProvider: [\n        {\n          date: '2013-01-16',\n          market1: 91,\n          market2: 75,\n          sales1: 5,\n          sales2: 8\n        },\n        {\n          date: '2013-01-17',\n          market1: 74,\n          market2: 78,\n          sales1: 4,\n          sales2: 6\n        },\n        {\n          date: '2013-01-18',\n          market1: 78,\n          market2: 88,\n          sales1: 5,\n          sales2: 2\n        },\n        {\n          date: '2013-01-19',\n          market1: 85,\n          market2: 89,\n          sales1: 8,\n          sales2: 9\n        },\n        {\n          date: '2013-01-20',\n          market1: 82,\n          market2: 89,\n          sales1: 9,\n          sales2: 6\n        },\n        {\n          date: '2013-01-21',\n          market1: 83,\n          market2: 85,\n          sales1: 3,\n          sales2: 5\n        },\n        {\n          date: '2013-01-22',\n          market1: 78,\n          market2: 92,\n          sales1: 5,\n          sales2: 7\n        }\n      ]\n    });\n  }\n\n  onTaskStatusChange(event) {\n    const parentNode = (event.target.parentNode.parentNode);\n    parentNode.classList.toggle('done-task');\n  }\n\n  goToWizard() {\n    this.router.navigate(['./wizard']);\n  }\n}\n\nfunction getRandomData() {\n  let data = [];\n  const totalPoints = 300;\n  if (data.length > 0) {\n    data = data.slice(1);\n  }\n\n  while (data.length < totalPoints) {\n    const prev = data.length > 0 ? data[data.length - 1] : 50;\n    let y = prev + Math.random() * 10 - 5;\n    if (y < 0) {\n      y = 0;\n    } else if (y > 100) {\n      y = 100;\n    }\n    data.push(y);\n  }\n\n  const res = [];\n  for (let i = 0; i < data.length; ++i) {\n    res.push([i, data[i]]);\n  }\n  return res;\n}\n\nfunction buildChartJS(a, b, f, c) {\n  if (f == null) {\n    f = 'rgba(0,0,0,0)';\n  }\n  return {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October'],\n    datasets: [{\n      label: '',\n      borderColor: a,\n      borderWidth: 2,\n      hitRadius: 30,\n      pointHoverRadius: 4,\n      pointBorderWidth: 50,\n      pointHoverBorderWidth: 12,\n      pointBackgroundColor: c,\n      pointBorderColor: 'transparent',\n      pointHoverBackgroundColor: a,\n      pointHoverBorderColor: 'rgba(0,0,0,0.5)',\n      fill: true,\n      backgroundColor: f,\n      data: b,\n    }]\n  };\n}\n\nfunction buildChartOption() {\n  return {\n    title: {\n      display: false\n    },\n    tooltips: {\n      enabled: true,\n      intersect: false,\n      mode: 'nearest',\n      xPadding: 10,\n      yPadding: 10,\n      caretPadding: 10\n    },\n    legend: {\n      display: false,\n      labels: {\n        usePointStyle: false\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    hover: {\n      mode: 'index'\n    },\n    scales: {\n      xAxes: [{\n        display: false,\n        gridLines: false,\n        scaleLabel: {\n          display: true,\n          labelString: 'Month'\n        }\n      }],\n      yAxes: [{\n        display: false,\n        gridLines: false,\n        scaleLabel: {\n          display: true,\n          labelString: 'Value'\n        },\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    elements: {\n      point: {\n        radius: 4,\n        borderWidth: 12\n      }\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    }\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    data: {\n      breadcrumb: 'Default',\n      icon: 'icofont-home bg-c-blue',\n      status: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","<div class=\"row\">\n  <div class=\"col-md-12 col-xl-12\">\n    <app-card [title]=\"'Operations'\" [cardClass]=\"'project-task'\" [blockClass]=\"'p-b-10'\">\n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\">\n          <thead>\n          <tr>\n            <th>Activity</th>\n            <th>Status</th>\n          </tr>\n          </thead>\n          <tbody>\n          <tr (click)=\"goToWizard()\">\n            <td style=\"width: 60%;\">\n              <div class=\"task-contain\">\n                <h6 class=\"bg-c-pink d-inline-block text-center\">S</h6>\n                <p class=\"d-inline-block m-l-20\">SELLING \"Home Lisbon\" -- HEDB-2DFAA-478AA-CB251</p>\n              </div>\n            </td>\n            <td style=\"width: 40%;\">\n              <p class=\"d-inline-block m-r-20\">Realtor Validating</p>\n              <div class=\"progress d-inline-block\">\n                <div class=\"progress-bar bg-c-pink\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:60%\">\n                </div>\n              </div>\n            </td>\n          </tr>\n          <tr (click)=\"goToWizard()\">\n            <td style=\"width: 60%;\">\n              <div class=\"task-contain\">\n                <h6 class=\"bg-c-yellow d-inline-block text-center\">B</h6>\n                <p class=\"d-inline-block m-l-20\">BUYING \"Home Marbella\" -- SAA5-AFDDE-45AD7-88774</p>\n              </div>\n            </td>\n            <td style=\"width: 40%;\">\n              <p class=\"d-inline-block m-r-20\">Bank pending</p>\n              <div class=\"progress d-inline-block\">\n                <div class=\"progress-bar bg-c-yellow\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width:50%\">\n                </div>\n              </div>\n            </td>\n          </tr>\n          </tbody>\n        </table>\n      </div>\n    </app-card>\n  </div>\n\n  <div class=\"col-md-12 col-xl-12\">\n    <app-card [title]=\"'Market status for Marbella area'\" [cardClass]=\"'email-sent-card'\" [classHeader]=\"true\" style=\"padding-bottom: 0;\">\n      <span class=\"code-header\">\n      </span>\n      <div id=\"email-sent\" style=\"max-width:100%;height:400px;\"></div>\n    </app-card>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { HomeRoutingModule as HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {ChartModule} from 'angular2-chartjs';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    SharedModule,\n    ChartModule,\n    FormsModule,\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule { }\n"]}