{"version":3,"sources":["webpack:///src/app/shared/card/card-toggle.directive.ts","webpack:///src/app/shared/card/card-animation.ts","webpack:///src/app/shared/card/card.component.html","webpack:///src/app/shared/card/card.component.ts","webpack:///src/app/pages/simple-page/simple-page.component.ts","webpack:///src/app/pages/simple-page/simple-page-routing.module.ts","webpack:///src/app/pages/simple-page/simple-page.module.ts","webpack:///src/app/pages/simple-page/simple-page.component.html"],"names":["CardToggleDirective","cardToggle","overflow","height","cardClose","opacity","display","el","$event","preventDefault","this","nativeElement","classList","toggle","CardComponent","classHeader","loadCard","isCardToggled","event","fullCard","fullCardIcon","cardLoad","setTimeout","SimplePageComponent","SimplePageRoutingModule","SimplePageModule","routes","path","component","data","breadcrumb","icon","breadcrumb_caption","status","forChild","CommonModule"],"mappings":"wcAKaA,E,YCHAC,EAAa,YAAQ,aAAc,CAC5C,YAAM,kBACF,YAAM,CACFC,SAAU,SACVC,OAAQ,SAGhB,YAAM,WACF,YAAM,CACFA,OAAQ,OAGhB,YAAW,yBAA0B,CACjC,YAAQ,yBAIHC,EAAY,YAAQ,YAAa,CAC1C,YAAM,OAAQ,YAAM,CAChBC,QAAS,KAEb,YAAM,SAAU,YAAM,CAClBA,QAAS,EACTC,QAAS,UAEb,YAAW,kBAAmB,YAAS,Y,wBDtBpC,IAAMN,EAAN,WACH,WAAoBO,aAAA,KAAAA,KADjB,2CAIMC,GACLA,EAAOC,iBACPC,KAAKH,GAAGI,cAAcC,UAAUC,OAAO,eANxC,M,oCAAMb,GAAmB,iD,mDAAnBA,EAAmB,yE,qDAAnB,mB,4BEFT,wCAA2B,yBAAmB,+B,2CAAnB,+E,sBAC3B,wCACE,iCACF,+B,gEAGI,wCAA2B,6JAAmD,mCAA2C,+B,gEACzH,wCAA0B,6JAAmD,mCAA4C,+B,gEACzH,sCAA0B,uCAAiE,qIAA6B,8BAAI,8B,8CAA/F,4H,gEAC7B,sCAA0B,wCAAkE,qIAA6B,8BAAI,+B,gEAC7H,sCAA0B,wCAA+C,yIAAkC,8BAAI,+B,gEAC/G,sCAA0B,wCAA4C,oIAA4B,8BAAI,+B,yBAb5G,yCACE,sCAAI,yBAAW,8BACf,4CACA,4CAGA,yCACE,wCACE,0CACA,0CACA,0CACA,2CACA,2CACA,2CACF,8BACF,8BACF,+B,0CAfM,sEACG,6EACA,4EAKE,+EACA,8EACA,8EACA,8EACA,8EACA,+E,sBAUX,0CAA0C,mCAAsD,+B,ICdrFc,E,sDAAN,IAAMA,EAAN,WAaL,aAAa,UARJ,KAAAC,eACT,KAAAd,WAAa,WACb,KAAAG,UAAY,OAGZ,KAAAY,YACA,KAAAC,iBAXK,iFAkBMC,GACTR,KAAKT,WAAiC,cAApBS,KAAKT,WAA6B,WAAa,cAnB9D,gCAsBKiB,GACRR,KAAKN,UAA+B,WAAnBM,KAAKN,UAAyB,OAAS,WAvBrD,iCA0BMc,GACTR,KAAKS,SAA6B,cAAlBT,KAAKS,SAA2B,GAAK,YACrDT,KAAKU,aAAqC,mBAAtBV,KAAKU,aAAoC,GAAK,mBA5B/D,uCA+BW,WACdV,KAAKM,YACLN,KAAKW,SAAW,YAChBC,WAAY,WACVZ,EAAKW,SAAW,GAChBX,EAAKM,aACJ,SArCA,M,oCAAMF,I,mDAAAA,EAAa,8wB,kCDV1B,yCACE,4CAkBA,uCACE,yCACE,+BACF,8BACF,8BACA,2CACF,+B,MAzBK,4EAA2C,oDAAwB,uBAC5C,sEAkBrB,kFACoB,8EAIC,2E,2GCjBd,CAACb,EAAYG,M,gGCAdmB,ECcAC,ECNAC,E,gDDXPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WDASL,EAAN,WAEL,aAAa,UAFR,uD,sCAAMA,I,mDAAAA,EAAmB,2HGPhC,yCACE,yCACE,8CACE,qCACE,6dAOF,8BACF,8BACF,8BACF,+B,MAZc,8E,kCFMVM,KAAM,CACJC,WAAY,cACZC,KAAM,0CACNC,mBAAoB,yEACpBC,QAAO,KASN,IAAMT,EAAN,yB,gDAAMA,I,+EAAAA,IAAuB,SAHzB,CAAC,IAAaU,SAASR,IACtB,O,eCJL,IAAMD,EAAN,yB,gDAAMA,I,+EAAAA,IAAgB,SAPlB,CACP,EAAAU,aACA,EACA,Q","file":"x","sourcesContent":["import {Directive, ElementRef, HostListener} from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[appCardToggleEvent]'\r\n})\r\nexport class CardToggleDirective {\r\n    constructor(private el: ElementRef) { }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onToggle($event: any) {\r\n        $event.preventDefault();\r\n        this.el.nativeElement.classList.toggle('icon-up');\r\n    }\r\n}\r\n","import {trigger, state, style, AUTO_STYLE, transition, animate} from '@angular/animations';\r\n\r\nexport const cardToggle = trigger('cardToggle', [\r\n    state('collapsed, void',\r\n        style({\r\n            overflow: 'hidden',\r\n            height: '0px',\r\n        })\r\n    ),\r\n    state('expanded',\r\n        style({\r\n            height: AUTO_STYLE,\r\n        })\r\n    ),\r\n    transition('collapsed <=> expanded', [\r\n        animate('400ms ease-in-out')\r\n    ])\r\n]);\r\n\r\nexport const cardClose = trigger('cardClose', [\r\n    state('open', style({\r\n        opacity: 1\r\n    })),\r\n    state('closed', style({\r\n        opacity: 0,\r\n        display: 'none'\r\n    })),\r\n    transition('open <=> closed', animate( '400ms' )),\r\n]);\r\n","<div class=\"card {{ fullCard }} {{ cardLoad }}\" [@cardClose]=\"cardClose\" [ngClass]=\"cardClass\">\n  <div class=\"card-header\" *ngIf=\"title\">\n    <h5>{{ title }}</h5>\n    <span *ngIf=\"!classHeader\">{{ headerContent }}</span>\n    <span *ngIf=\"classHeader\">\n      <ng-content select=\".code-header\"></ng-content>\n    </span>\n    <div class=\"card-header-right\">\n      <ul class=\"list-unstyled card-option\">\n        <li *ngIf=\"!isCardToggled\" (click)=\"this.isCardToggled = !this.isCardToggled\"><i class=\"icofont icofont-simple-left\"></i></li>\n        <li *ngIf=\"isCardToggled\" (click)=\"this.isCardToggled = !this.isCardToggled\"><i class=\"icofont icofont-simple-right\"></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-maximize {{ fullCardIcon }} full-card\" (click)=\"fullScreen($event)\"></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-minus minimize-card\" appCardToggleEvent (click)=\"toggleCard($event)\"></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-refresh reload-card\" (click)=\"appCardRefresh($event)\" ></i></li>\n        <li *ngIf=\"isCardToggled\"><i class=\"icofont icofont-error close-card\" (click)=\"closeCard($event)\"></i></li>\n      </ul>\n    </div>\n  </div>\n\n  <div [@cardToggle]=\"cardToggle\">\n    <div class=\"card-body\" [ngClass]=\"blockClass\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div class=\"card-loader\" *ngIf=\"loadCard\"><i class=\"icofont icofont-refresh rotate-refresh\"></i></div>\n</div>\n","import {Component, OnInit, Input, ViewEncapsulation} from '@angular/core';\nimport {cardToggle, cardClose} from './card-animation';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n  animations: [cardToggle, cardClose],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CardComponent implements OnInit {\n  @Input() headerContent: string;\n  @Input() title: string;\n  @Input() blockClass: string;\n  @Input() cardClass: string;\n  @Input() classHeader = false;\n  cardToggle = 'expanded';\n  cardClose = 'open';\n  fullCard: string;\n  fullCardIcon: string;\n  loadCard = false;\n  isCardToggled = false;\n  cardLoad: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  toggleCard(event) {\n    this.cardToggle = this.cardToggle === 'collapsed' ? 'expanded' : 'collapsed';\n  }\n\n  closeCard(event) {\n    this.cardClose = this.cardClose === 'closed' ? 'open' : 'closed';\n  }\n\n  fullScreen(event) {\n    this.fullCard = this.fullCard === 'full-card' ? '' : 'full-card';\n    this.fullCardIcon = this.fullCardIcon === 'icofont-resize' ? '' : 'icofont-resize';\n  }\n\n  appCardRefresh() {\n    this.loadCard = true;\n    this.cardLoad = 'card-load';\n    setTimeout( () => {\n      this.cardLoad = '';\n      this.loadCard = false;\n    }, 3000);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-simple-page',\n  templateUrl: './simple-page.component.html',\n  styleUrls: ['./simple-page.component.scss']\n})\nexport class SimplePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {SimplePageComponent} from './simple-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SimplePageComponent,\n    data: {\n      breadcrumb: 'Sample Page',\n      icon: 'icofont icofont-file-document bg-c-pink',\n      breadcrumb_caption: 'Lorem Ipsum Dolor Sit Amet, Consectetur Adipisicing Elit - Sample Page',\n      status: true\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SimplePageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SimplePageRoutingModule } from './simple-page-routing.module';\nimport { SimplePageComponent } from './simple-page.component';\nimport {SharedModule} from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SimplePageRoutingModule,\n    SharedModule\n  ],\n  declarations: [SimplePageComponent]\n})\nexport class SimplePageModule { }\n","<div class=\"row\">\n  <div class=\"col-sm-12\">\n    <app-card [title]=\"'Hello card'\">\n      <p>\n        \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n        eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n        enim ad minim veniam, quis nostrud exercitation ullamco laboris\n        nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n        in reprehenderit in voluptate velit esse cillum dolore eu fugiat\n        nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n        sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n      </p>\n    </app-card>\n  </div>\n</div>\n"]}